{"version":3,"sources":["components/LoginForm.module.css","history.js","store/actions/type.js","api/firebaseRefreshToken.js","components/Notify.js","store/actions/firebaseAuth.js","api/stream.js","store/actions/stream.js","components/Table.js","components/Spinner.js","pages/Machines/DataTable.js","pages/Project/List.js","pages/Project/ProjectForm.js","pages/Project/Create.js","pages/Project/Edit.js","pages/Project/Delete.js","pages/Project/Details.js","api/backend.js","components/LoginForm.js","store/actions/auth.js","components/Logout.js","Nav/Nav.js","SideBar/SideBar.js","Footer/Footer.js","firebaseConfig.js","api/machineStatusManagement.js","helper.js","components/FirebaseLoginForm.js","store/actions/user.js","pages/UserManagementDashboard/UsersList.js","pages/UserManagementDashboard/UserForm.js","store/actions/company.js","pages/UserManagementDashboard/CreateUser.js","pages/UserManagementDashboard/UserDashboard.js","pages/UserManagementDashboard/UpdateUser.js","pages/UserManagementDashboard/BlockUser.js","pages/UserManagementDashboard/DeleteUser.js","store/actions/machineStatus.js","pages/Machines/MachineStatusTable.js","pages/Machines/MachineStatusFilter.js","pages/Machines/MachineList.js","pages/MainNavigation.js","components/IdleTimerContainer.js","App.js","store/reducers/authReducer.js","store/reducers/streamReducer.js","store/reducers/firebaseAuthReducer.js","store/reducers/userReducer.js","store/reducers/companyReducer.js","store/reducers/machineStatusReducer.js","store/reducers/index.js","index.js"],"names":["module","exports","createBrowserHistory","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","LOG_IN","LOG_OUT","USER_LOG_IN","USER_LOG_OUT","USER_GROUPS","REFRESH_TOKEN","CREATE_USER","FETCH_USERS","FETCH_USER","DELETE_USER","EDIT_USER","FETCH_SECTIONS","FETCH_MACHINES","BLOCK_UNBLOCK_USER","LIVE_STATUS","FILTERED_DATA","IS_FETCHING","IS_FETCHED","axios","create","baseURL","process","toast","configure","notify_success","message","success","position","POSITION","TOP_RIGHT","autoClose","notify_error","error","notify_info","info","refreshToken","a","console","localStorage","getItem","history","push","post_data","grant_type","firebaseRefreshToken","post","response","status","setItem","data","refresh_token","id_token","userLoginWithPhone","dispatch","log","type","actionTypes","userLogOutWithPhone","fetchStream","id","streams","get","payload","Table","props","className","title","subtitle","headers","map","header","index","values","Spinner","style","width","height","role","DataTable","renderContent","isLoading","undefined","records","length","total_on_time","total_off_time","utilization","columns","field","options","exportButton","exportAllData","paging","pageSize","pageSizeOptions","paginationType","this","React","Component","List","stream","description","to","isAuthenticated","Fragment","connect","state","Object","results","fbAuth","isUserAuthenticated","fetchStreams","ProjectForm","renderInput","input","label","meta","touched","renderError","onSubmit","formValues","handleSubmit","Field","name","component","reduxForm","form","validate","errors","Create","createStream","getState","Edit","editStream","match","params","initialValues","_","pick","ownProps","patch","Delete","deleteStream","onClick","Modal","show","onHide","Header","Body","Footer","renderActions","delete","Details","LoginForm","userLogin","styles","custom_form","loginForm","username","password","backend","Logout","Dialog","closeButton","Nav","isToggled","onToggleHandler","setState","data-toggle","aria-controls","aria-expanded","aria-label","renderLogin","SideBar","e","preventDefault","data-color","renderSideBarMenu","href","target","rel","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","checkUser","phone_number","machineStatusManagement","is_exists","FirebaseLoginForm","has_submit","has_success","has_otp_submit","renderButton","buttonText","disabled","as","animation","size","aria-hidden","onOTPSubmit","settUpRecaptcha","window","recaptchaVerifier","auth","RecaptchaVerifier","callback","defaultCountry","phoneNumber","then","result","group","appVerifier","signInWithPhoneNumber","confirmationResult","catch","otp","code","confirm","user","getIdToken","idToken","firebaseLoginForm","getUserGroup","fetchUser","UsersList","fetchUsers","users","employee_id","group_name","section_name","is_blocked","renderList","UserForm","renderUserGroup","value","groups","item","renderSection","sections","is_update","user_group","section","getSections","createUser","company","location","reload","UserDashboard","Tabs","defaultActiveKey","Tab","eventKey","CreateUser","UpdateUser","editUser","initValue","BlockUser","isBlocked","blockUnblockUser","renderUnblockContent","renderUnblockActions","DeleteUser","deleteUser","is_active","getFilteredData","MachineStatusTable","renderStatus","rowData","color","paddingRight","renderNetworkStatus","network_status","render","getLiveStatus","interval","setInterval","clearInterval","machine","live_data","MachineStatusFilter","start_date","start_time","end_date","end_time","machines","machineList","shift","onSectionSelection","sectionId","parseInt","filter","onMachineSelection","machineIds","Array","from","selectedOptions","option","onFormSubmit","queryString","toISOString","split","hour","minute","join","replace","onClearSubmit","onChange","utils","MomentUtils","margin","format","date","KeyboardButtonProps","time","multiple","machine_no","onLoading","filtered_data","getMachines","MachineList","onFilter","queryParams","path","exact","userLogOut","idleTimerRef","useRef","ref","timeout","onIdle","App","token","INITIAL_STATE","prev_link","next_link","streamReducer","action","mapKeys","omit","authReducer","removeItem","firebaseAuthReducer","userReducer","companyReducer","machineStatusReducer","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,YAAc,iC,8LCEjBC,gBCHFC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAe,eACfC,EAAgB,gBAChBC,EAAc,cACdC,EAAS,SACTC,EAAU,UAEVC,EAAc,cACdC,EAAe,eACfC,EAAc,cACdC,EAAgB,gBAChBC,EAAc,cACdC,EAAc,cACdC,EAAa,aACbC,EAAc,cACdC,EAAY,YACZC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAqB,qBACrBC,EAAc,cACdC,EAAgB,gBAChBC,EAAc,cACdC,EAAa,a,kBCpBXC,MAAMC,OAAO,CACxBC,QAAQ,GAAD,OAAKC,6F,gBCDhBC,IAAMC,YAEC,IAAMC,EAAiB,SAACC,GAC3BH,IAAMI,QAAN,UAAiBD,GAAW,CACxBE,SAAUL,IAAMM,SAASC,UACzBC,UAAW,OAGNC,EAAe,SAACN,GACzBH,IAAMU,MAAN,UAAeP,GAAW,CACtBE,SAAUL,IAAMM,SAASC,UACzBC,UAAW,OAGNG,EAAc,SAACR,GACxBH,IAAMY,KAAN,UAAcT,GAAW,CACrBE,SAAUL,IAAMM,SAASC,UACzBC,UAAW,OCdNK,EAAY,uCAAG,8BAAAC,EAAA,yDACxBC,QAAQH,KAAK,+BACRI,aAAaC,QAAQ,gBAFF,gBAGpBC,EAAQC,KAAK,gBAHO,8BAKdC,EAAY,CAACC,WAAY,gBAAiB,cAAiBL,aAAaC,QAAQ,iBALlE,SAMGK,EAAqBC,KAAK,GAAIH,GANjC,OAOI,OADlBI,EANc,QAOPC,SACTT,aAAaU,QAAQ,eAAgBF,EAASG,KAAKC,eACnDZ,aAAaU,QAAQ,UAAWF,EAASG,KAAKE,WAT9B,4CAAH,qDAeZC,EAAqB,kBAAM,SAACC,GACrChB,QAAQiB,IAAI,6BACZD,EAAS,CAACE,KAAMC,IAChBhC,EAAe,kBACfgB,EAAQC,KAAK,OAGJgB,GAAsB,kBAAM,SAACJ,GAClCf,aAAaC,QAAQ,YACrBf,EAAe,4BAEnB6B,EAAS,CAACE,KAAMC,M,SC7BLtC,OAAMC,OAAO,CACxBC,QAAS,2BCgBAsC,GAAc,SAACC,GAAD,8CAAQ,WAAMN,GAAN,eAAAjB,EAAA,sEACRwB,GAAQC,IAAR,mBAAwBF,IADhB,OACzBb,EADyB,OAE/BO,EAAS,CAACE,KAAMC,EAA0BM,QAAShB,EAASG,OAF7B,2CAAR,uDCoBZc,GArCD,SAAAC,GACV,OACI,qBAAKC,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,UAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,iCAAf,UACI,sBAAKA,UAAU,eAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BD,EAAME,QAClC,mBAAGD,UAAU,gBAAb,SAA8BD,EAAMG,cAExC,qBAAKF,UAAU,8CAAf,SACI,wBAAOA,UAAU,kCAAjB,UACI,gCACI,6BACKD,EAAMI,QAAQC,KAAI,SAACC,EAAQC,GAAT,OAAmB,6BAAiBD,GAARC,UAGvD,gCACCP,EAAMQ,gC,qBCbxCC,GATC,WACZ,OACI,qBAAKR,UAAU,cAAf,SACI,qBAAKA,UAAU,+BAA+BS,MAAO,CAACC,MAAO,OAAQC,OAAQ,QAASC,KAAK,SAA3F,SACI,sBAAMZ,UAAU,UAAhB,6BCqEDa,G,4MArEXC,cAAgB,WAUZ,GAAG,EAAKf,MAAMgB,UACV,OACI,qBAAKf,UAAU,YAAf,SACI,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,GAAD,UAMf,QAA8BgB,IAA1B,EAAKjB,MAAMf,KAAKiC,SAAwD,IAAjC,EAAKlB,MAAMf,KAAKiC,QAAQC,OACpE,OAAO,qBAAKlB,UAAU,cAAf,+BAaX,IAAMhB,EAAO,EAAKe,MAAMf,KAClBiB,EAAK,yBAAqBjB,EAAKmC,cAA1B,qCAAoEnC,EAAKoC,eAAzE,kCAAiHpC,EAAKqC,YAAtH,KACX,OACI,cAAC,KAAD,CACIpB,MAAOA,EACPqB,QAvCM,CACV,CAAErB,MAAO,UAAWsB,MAAO,gBAC3B,CAAEtB,MAAO,UAAWsB,MAAO,gBAC3B,CAAEtB,MAAO,SAAUsB,MAAO,UAC1B,CAAEtB,MAAO,OAAQsB,MAAO,QACxB,CAAEtB,MAAO,aAAcsB,MAAO,YAC9B,CAAEtB,MAAO,WAAYsB,MAAO,UAC5B,CAAEtB,MAAO,WAAYsB,MAAO,aAiCxBvC,KAAM,EAAKe,MAAMf,KAAKiC,QACtBO,QAAS,CACLC,cAAc,EACdC,eAAc,EACdC,QAAQ,EACRC,SAAU,GACVC,gBAAiB,CAAC,GAAI,GAAI,GAAI,KAC9BC,eAAgB,c,uDAS5B,OACI,qBAAK9B,UAAU,YAAf,SACI,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,YAAf,SACK+B,KAAKjB,0B,GA/DNkB,IAAMC,WCIxBC,G,2KAOE,OAAQH,KAAKhC,MAAMJ,QAAQS,KAAI,SAAC+B,EAAQ7B,GACpC,OACI,+BACI,6BAAK6B,EAAOzC,KACZ,6BAAKyC,EAAOlC,QACZ,6BAAKkC,EAAOC,cACZ,6BAAI,cAAC,IAAD,CAAMC,GAAE,wBAAmBF,EAAOzC,IAAMM,UAAU,kBAAlD,oBACJ,6BAAI,cAAC,IAAD,CAAMqC,GAAE,0BAAqBF,EAAOzC,IAAMM,UAAU,iBAApD,wBALCM,Q,+BAYjB,OAAMyB,KAAKhC,MAAMuC,gBAQb,cAAC,IAAMC,SAAP,UACI,cAAC,GAAD,MARG,cAAC,IAAD,CAAUF,GAAG,qB,GAtBbL,IAAMC,W,IAwCVO,aAJS,SAACC,GACrB,MAAO,CAAC9C,QAAS+C,OAAOnC,OAAOkC,EAAM9C,QAAQgD,SACrCL,gBAAiBG,EAAMG,OAAOC,uBAEF,CAACC,aJlCb,yDAAM,WAAM1D,GAAN,eAAAjB,EAAA,sEACPwB,GAAQC,IAAI,YADL,OACxBf,EADwB,OAE9BO,EAAS,CAACE,KAAMC,EAA2BM,QAAShB,EAASG,OAF/B,2CAAN,wDIkCbwD,CAAyCN,I,kBC7ClDa,G,4MAYFC,YAAc,YAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,MAAO5D,EAAgB,EAAhBA,KAAM6D,EAAU,EAAVA,KAC1BnD,EAAS,qBAAiBmD,EAAKpF,OAASoF,EAAKC,QAAU,yBAA0B,gBACvF,OACI,qBAAKpD,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAWA,EAAhB,UACI,gCAAQkD,IACR,mDAAWD,GAAX,IAAkBjD,UAAU,eAAeV,KAAMA,KAChD,EAAK+D,YAAYF,W,EAOtCG,SAAW,SAACC,GACR,EAAKxD,MAAMuD,SAASC,I,0DA1BZJ,GACR,GAAIA,EAAKC,SAAWD,EAAKpF,MACrB,OACI,qBAAKiC,UAAU,mBAAf,SACI,qBAAKA,UAAU,SAAf,SAAyBmD,EAAKpF,Y,+BA0B1C,OACI,qBAAKiC,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,4BAEJ,qBAAKA,UAAU,YAAf,SACI,uBACIsD,SAAUvB,KAAKhC,MAAMyD,aAAazB,KAAKuB,UAD3C,UAII,cAACG,GAAA,EAAD,CACIC,KAAK,QACLC,UAAW5B,KAAKiB,YAChBE,MAAM,QACN5D,KAAK,SAET,cAACmE,GAAA,EAAD,CACIC,KAAK,cACLC,UAAW5B,KAAKiB,YAChBE,MAAM,cACN5D,KAAK,SAET,wBACIU,UAAU,mCACVV,KAAK,SAFT,sC,GAzDV0C,IAAMC,WAoFjB2B,gBAAU,CACrBC,KAAM,cACNC,SAbc,SAACP,GACf,IAAMQ,EAAS,GAOf,OANIR,EAAWtD,QACX8D,EAAO9D,MAAQ,0BAEfsD,EAAWnB,cACX2B,EAAO3B,YAAc,gCAElB2B,IAGIH,CAGZb,ICrFGiB,G,4MACFV,SAAW,SAACC,GACR,EAAKxD,MAAMkE,aAAaV,I,uDAGxB,OACI,cAAC,IAAMhB,SAAP,UACI,cAAC,GAAD,CAAae,SAAUvB,KAAKuB,iB,GAPvBtB,IAAMC,WAaZO,eAAQ,KAAM,CAACyB,aNbF,SAAAV,GAAU,8CAAI,WAAOnE,EAAU8E,GAAjB,eAAA/F,EAAA,sEACfwB,GAAQf,KAAK,WAAb,gBAA6B2E,IADd,OAEd,OADlB1E,EADgC,QAEzBC,QACTvB,EAAe,4BAEnB6B,EAAS,CAACE,KAAMC,EAA2BM,QAAShB,EAASG,OAC7DT,EAAQC,KAAK,KANyB,2CAAJ,0DMavBgE,CAA8BwB,I,qBCZvCG,G,4MAKFb,SAAW,SAACC,GACR,EAAKxD,MAAMqE,WAAW,EAAKrE,MAAMsE,MAAMC,OAAO5E,GAAI6D,I,kEAJlDxB,KAAKhC,MAAMN,YAAYsC,KAAKhC,MAAMsE,MAAMC,OAAO5E,M,+BAS/C,GADAtB,QAAQiB,IAAI,uBAAwB0C,KAAKhC,MAAMoC,SAC1CJ,KAAKhC,MAAMoC,OACZ,OAAO,0CAEX,IAAMoC,EAAgBC,KAAEC,KAAK1C,KAAKhC,MAAMoC,OAAQ,QAAS,eAEzD,OADA/D,QAAQiB,IAAI,mBAAoBkF,GAE5B,cAAC,GAAD,CACIjB,SAAUvB,KAAKuB,SAEfiB,cAAiBC,KAAEC,KAAK1C,KAAKhC,MAAMoC,OAAQ,QAAS,qB,GApBjDH,IAAMC,WAgCVO,gBANS,SAACC,EAAOiC,GAI5B,OAHAtG,QAAQiB,IAAI,YAAaoD,EAAM9C,QAAQgD,SACvCvE,QAAQiB,IAAI,OAAQqF,EAASL,MAAMC,OAAO5E,IAC1CtB,QAAQiB,IAAI,WAAYoD,EAAM9C,QAAQgD,QAAQ+B,EAASL,MAAMC,OAAO5E,KAC7D,CAACyC,OAAQM,EAAM9C,QAAQgD,QAAQ+B,EAASL,MAAMC,OAAO5E,OAExB,CAACD,eAAa2E,WPd5B,SAAC1E,EAAI6D,GAAL,8CAAoB,WAAMnE,GAAN,eAAAjB,EAAA,sEACnBwB,GAAQgF,MAAR,mBAA0BjF,GAAM6D,GADb,OACpC1E,EADoC,OAE1CO,EAAS,CAACE,KAAMC,EAAyBM,QAAShB,EAASG,OAC3DzB,EAAe,yBACfgB,EAAQC,KAAK,KAJ6B,2CAApB,wDOcXgE,CAAoD2B,I,UC9B7DS,G,4MAMFtB,SAAW,WACPlF,QAAQiB,IAAI,WAAY,EAAKU,MAAMoC,QACnC,EAAKpC,MAAM8E,aAAa,EAAK9E,MAAMsE,MAAMC,OAAO5E,K,kEALhDqC,KAAKhC,MAAMN,YAAYsC,KAAKhC,MAAMsE,MAAMC,OAAO5E,M,sCAS/C,OACI,eAAC,IAAM6C,SAAP,WACI,wBACIvC,UAAU,iBACV8E,QAAS/C,KAAKuB,SAFlB,oBAIA,cAAC,IAAD,CAAMjB,GAAG,IAAIrC,UAAU,oBAAvB,yB,sCAMR,OAAI+B,KAAKhC,MAAMoC,OAGT,+CAAN,OAAsDJ,KAAKhC,MAAMoC,OAAOlC,OAF7D,qC,+BAOX,OACI,eAAC8E,GAAA,EAAD,CAAOC,MAAM,EAAMC,OAAQ,kBAAI1G,EAAQC,KAAK,MAA5C,UACI,cAACuG,GAAA,EAAMG,OAAP,4BACA,cAACH,GAAA,EAAMI,KAAP,UAAapD,KAAKjB,kBAClB,cAACiE,GAAA,EAAMK,OAAP,UAAerD,KAAKsD,yB,GApCfrD,IAAMC,WA8CZO,gBAJS,SAACC,EAAOiC,GAC5B,MAAO,CAACvC,OAAQM,EAAM9C,QAAQgD,QAAQ+B,EAASL,MAAMC,OAAO5E,OAGxB,CAACD,eAAaoF,aRvB1B,SAACnF,GAAD,8CAAQ,WAAMN,GAAN,SAAAjB,EAAA,sEAC1BwB,GAAQ2F,OAAR,mBAA2B5F,IADD,OAEhCN,EAAS,CAACE,KAAMC,EAA2BM,QAASH,IACpDnB,EAAQC,KAAK,KACbjB,EAAe,yCAJiB,2CAAR,wDQuBbiF,CAAsDoC,IC7CtDW,G,uKANP,OACI,mD,GAHUvD,IAAMC,WCCbhF,OAAMC,OAAO,CACxBC,QAAQ,GAAD,OAAKC,uBAAL,a,qBCKLoI,G,4MAYFxC,YAAc,YAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,MAAO5D,EAAgB,EAAhBA,KAAM6D,EAAU,EAAVA,KAC1BnD,EAAS,qBAAiBmD,EAAKpF,OAASoF,EAAKC,QAAU,yBAA0B,gBACvF,OACI,qBAAKpD,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAWA,EAAhB,UACI,gCAAQkD,IACR,mDAAWD,GAAX,IAAkBjD,UAAU,eAAeV,KAAMA,KAChD,EAAK+D,YAAYF,W,EAOtCG,SAAW,SAACC,GACR,EAAKxD,MAAM0F,UAAUlC,I,0DA1BbJ,GACR,GAAIA,EAAKC,SAAWD,EAAKpF,MACrB,OACI,qBAAKiC,UAAU,mBAAf,SACI,qBAAKA,UAAU,SAAf,SAAyBmD,EAAKpF,Y,+BA6B1C,OAHIM,aAAaC,QAAQ,UACrBC,EAAQC,KAAK,KAGb,qBAAKwB,UAAU,kBAAkBN,GAAIgG,KAAOC,YAA5C,SACI,qBAAK3F,UAAU,MAAf,SACI,qBAAKA,UAAU,mCAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,0BAEJ,qBAAKA,UAAU,YAAf,SACI,uBACIsD,SAAUvB,KAAKhC,MAAMyD,aAAazB,KAAKuB,UAD3C,UAII,cAACG,GAAA,EAAD,CACIC,KAAK,WACLC,UAAW5B,KAAKiB,YAChBE,MAAM,WACN5D,KAAK,SAET,cAACmE,GAAA,EAAD,CACIC,KAAK,WACLC,UAAW5B,KAAKiB,YAChBE,MAAM,WACN5D,KAAK,aAET,wBACIU,UAAU,mCACVV,KAAK,SAFT,sC,GA5DZ0C,IAAMC,WA4FxB2D,GAAYhC,aAAU,CACxBC,KAAM,YACNC,SAlBc,SAACP,GACf,IAAMQ,EAAS,GAOf,OANIR,EAAWsC,WACX9B,EAAO8B,SAAW,iCAElBtC,EAAWuC,WACX/B,EAAO+B,SAAW,gCAEf/B,IAQOH,CAGf4B,IAEYhD,eAAQ,KAAM,CAACiD,UCpGL,SAAAlC,GAAU,8CAAI,WAAOnE,EAAU8E,GAAjB,eAAA/F,EAAA,+EAER4H,GAAQnH,KAAK,gBAAb,gBAAkC2E,IAF1B,OAEzB1E,EAFyB,OAG/BT,QAAQiB,IAAI,YAAaR,EAASC,QACV,MAApBD,EAASC,QACTvB,EAAe,kBAEnB6B,EAAS,CAACE,KAAMC,EAAoBM,QAAShB,EAASG,OACtDT,EAAQC,KAAK,KARkB,kDAU/BV,EAAa,0CAVkB,0DAAJ,0DDoGpB0E,CAA2BoD,IEjGpCI,G,4MAEF1C,SAAW,WACP,EAAKvD,MAAMP,sBACXjB,EAAQC,KAAK,M,8DAIb,OACI,eAAC,IAAM+D,SAAP,WACI,cAAC,IAAD,CAAMF,GAAG,IAAIrC,UAAU,oBAAvB,oBACA,wBACIA,UAAU,iBACV8E,QAAS/C,KAAKuB,SAFlB,yB,sCASR,MAAM,qC,+BAKN,OAAKvB,KAAKhC,MAAMuC,gBAIZ,eAACyC,GAAA,EAAMkB,OAAP,WACI,cAAClB,GAAA,EAAMG,OAAP,CAAcgB,aAAW,EAAzB,oBACA,cAACnB,GAAA,EAAMI,KAAP,UAAapD,KAAKjB,kBAClB,cAACiE,GAAA,EAAMK,OAAP,UAAerD,KAAKsD,qBANjB,cAAC,IAAD,CAAUhD,GAAG,qB,GA1BXL,IAAMC,WA2CZO,gBALS,SAACC,GACrB,MAAO,CAACH,gBAAiBG,EAAMG,OAAOC,uBAIF,CAACrD,wBAA1BgD,CAAgDwD,ICtCzDG,G,4MAEF1D,MAAQ,CACJ2D,WAAW,G,EAGfC,gBAAkB,WACd,EAAKC,SAAS,CACVF,WAAY,EAAK3D,MAAM2D,a,4DAK3B,OAAIrE,KAAKhC,MAAMuC,gBAEP,cAAC,IAAD,CAAMtC,UAAU,WAAWqC,GAAG,UAA9B,SACI,sBAAMrC,UAAU,UAAhB,uBAKJ,cAAC,IAAD,CAAMA,UAAU,WAAWqC,GAAG,eAA9B,SACI,sBAAMrC,UAAU,UAAhB,uB,+BAMN,IACCoG,EAAarE,KAAKU,MAAlB2D,UACP,OACI,cAAC,IAAM7D,SAAP,UACI,qBAAKvC,UAAU,2BAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,cAAC,IAAD,CAAMA,UAAU,eAAeqC,GAAG,KAAlC,yBACA,yBACIyC,QAAS/C,KAAKsE,gBACdrG,UAAW,uCAAyCoG,EAAY,WAAa,IAC7E9G,KAAK,SAASiH,cAAY,WAC1BC,gBAAc,mBACdC,gBAAc,QACdC,aAAW,oBANf,UAQI,sBAAM1G,UAAU,oCAChB,sBAAMA,UAAU,oCAChB,sBAAMA,UAAU,uCAEpB,qBAAKA,UAAU,+CAA+CN,GAAG,aAAjE,SA6BI,qBAAIM,UAAU,qBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWqC,GAAG,UAA9B,SACKN,KAAKhC,MAAM8C,oBACR,sBAAM7C,UAAU,UAAhB,qBACA,sBAAMA,UAAU,UAAhB,SAA2B3B,aAAaC,QAAQ,cAkB5D,oBAAI0B,UAAU,WAAd,SACK+B,KAAK4E,gC,GApGxB3E,IAAMC,WAmHTO,gBAJS,SAACC,GACrB,MAAO,CAACH,gBAAiBG,EAAMG,OAAOC,uBAGF,CAAC1D,qBAAoBK,wBAA9CgD,CAAoE2D,IC5H7ES,G,kLAEE,OAAI7E,KAAKhC,MAAMuC,gBAIX,qBAAItC,UAAU,MAAd,UACI,oBAAIA,UAAU,WAAd,SACI,eAAC,IAAD,CAAMA,UAAU,WAAWqC,GAAG,KAAKyC,QAAU,SAAC+B,GAAD,OAAOA,EAAEC,kBAAtD,UACI,mBAAG9G,UAAU,4BACb,+CAGP3B,aAAaC,QAAQ,UAA8C,cAAlCD,aAAaC,QAAQ,SACnD,oBAAI0B,UAAU,WAAd,SACI,eAAC,IAAD,CAAMA,UAAU,WAAWqC,GAAG,SAA9B,UACI,mBAAGrC,UAAU,yBACb,sDAGN,KAGN,oBAAIA,UAAU,WAAd,SACI,eAAC,IAAD,CAAMA,UAAU,WAAWqC,GAAG,iBAA9B,UACI,mBAAGrC,UAAU,qBACb,6CAvBL,O,+BA8BX,OACI,qBAAKA,UAAU,UAAU+G,aAAW,OAApC,SACI,sBAAK/G,UAAU,kBAAf,UACI,qBAAKA,UAAU,OAAf,SACI,cAAC,IAAD,CAAMqC,GAAG,KAAKrC,UAAU,cAAxB,oBAIH+B,KAAKiF,6B,GAzCJhF,IAAMC,WAoDbO,gBAJS,SAACC,GACrB,MAAO,CAACH,gBAAiBG,EAAMG,OAAOC,uBAG3BL,CAAyBoE,ICXzBxB,G,uKAxCP,OACI,wBAAQpF,UAAU,SAAlB,SACI,qBAAKA,UAAU,kBAAf,SACI,gCACI,qBAAIA,UAAU,cAAd,UACI,6BACI,mBAAGiH,KAAK,KAAR,oBAIJ,6BACI,mBAAGA,KAAK,KAAR,uBAIJ,6BACI,mBAAGA,KAAK,KAAR,yBAIJ,6BACI,mBAAGA,KAAK,KAAR,uBAKR,oBAAGjH,UAAU,wBAAb,iBAEI,8EAGA,mBAAGiH,KAAK,wCAAwCC,OAAO,SAASC,IAAI,sBAApE,wBALJ,kD,GA5BHnF,IAAMC,W,2BCQ3BmF,KAASC,cATc,CACnBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGJR,UAAf,ECVenK,OAAMC,OAAO,CACxBC,QAAQ,GAAD,OAAKC,0CCFHyK,GAAS,uCAAG,WAAOC,GAAP,eAAA3J,EAAA,sEACM4J,GAAwBnJ,KAAK,mBAAoB,CAACiH,SAASiC,IADjE,UAEO,OADlBjJ,EADW,QAEJC,OAFI,uBAGbV,QAAQiB,IAAI,SAAUR,EAASG,MAHlB,kBAINH,EAASG,MAJH,gCAMV,CAACgJ,WAAW,IANF,2CAAH,sDCYhBC,G,4MAEFxF,MAAQ,CACJyF,YAAY,EACZC,aAAa,EACbC,gBAAgB,G,EAapBpF,YAAc,YAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,MAAO5D,EAAgB,EAAhBA,KAAM6D,EAAU,EAAVA,KAC1BnD,EAAS,qBAAiBmD,EAAKpF,OAASoF,EAAKC,QAAU,yBAA0B,gBACvF,OACI,qBAAKpD,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAWA,EAAhB,UACI,gCAAQkD,IACR,mDAAWD,GAAX,IAAkBjD,UAAU,eAAeV,KAAMA,KAChD,EAAK+D,YAAYF,W,EAOtCkF,aAAe,SAACC,GACZ,OAAK,EAAK7F,MAAMyF,YAAe,EAAKzF,MAAM2F,eAStC,yBACIpI,UAAU,mCACVuI,UAAQ,EAFZ,UAII,cAAC,KAAD,CACIC,GAAG,OACHC,UAAU,OACVC,KAAK,KACL9H,KAAK,SACL+H,cAAY,SATpB,mBARQ,wBACJ3I,UAAU,mCACVV,KAAK,SAFD,SAIHgJ,K,EAoBbxH,cAAgB,WACZ,OAAK,EAAK2B,MAAM0F,YAkBZ,uBACI7E,SAAU,EAAKvD,MAAMyD,aAAa,EAAKoF,aAD3C,UAII,cAACnF,GAAA,EAAD,CACIC,KAAK,MACLC,UAAW,EAAKX,YAChBE,MAAM,MACN5D,KAAK,WAER,EAAK+I,aAAa,aA1BnB,uBACI/E,SAAU,EAAKvD,MAAMyD,aAAa,EAAKF,UAD3C,UAGI,qBAAK5D,GAAG,wBAER,cAAC+D,GAAA,EAAD,CACIC,KAAK,WACLC,UAAW,EAAKX,YAChBE,MAAM,eACN5D,KAAK,SAER,EAAK+I,aAAa,c,EAoBnCQ,gBAAkB,WACdC,OAAOC,kBAAoB,IAAI3B,GAAS4B,KAAKC,kBACzC,sBACA,CACIP,KAAM,YACNQ,SAAU,SAAUrK,GAChBT,QAAQiB,IAAI,qBAEhB8J,eAAgB,Q,EAK5B7F,SAAW,SAACC,GACR,EAAK+C,SAAS,CAAC4B,YAAW,IAC1B,IAAMkB,EAAc,MAAQ7F,EAAWsC,SACpBgC,GAAUuB,GAClBC,MAAK,SAACC,GACb,IAAKA,EAAOtB,UAGR,OAFAlK,EAAa,wBACb,EAAKwI,SAAS,CAAC4B,YAAW,IACnB,KAEX7J,aAAaU,QAAQ,OAAQuK,EAAO5F,MACpCrF,aAAaU,QAAQ,QAASuK,EAAOC,OACrC,EAAKV,kBACL,IAAMW,EAAcV,OAAOC,kBAC3B3B,GAAS4B,OAAOS,sBAAsBL,EAAaI,GAC9CH,MAAK,SAACK,GACHtL,QAAQiB,IAAI,0BACZyJ,OAAOY,mBAAqBA,EAE5B1L,EAAY,sBACZ,EAAKsI,SAAS,CAAC6B,aAAY,EAAMC,gBAAgB,OAClDuB,OAAM,SAAC5L,GACVD,EAAa,2BAIhB6L,OAAM,SAAC5L,GACJD,EAAa,kBACbM,QAAQiB,IAAI,UAAWtB,O,EAKnC6K,YAAc,SAACrF,GACX,EAAK+C,SAAS,CAAC4B,YAAW,EAAME,gBAAgB,IAChDhK,QAAQiB,IAAI,kBAAmBkE,EAAWqG,KAC1C,IAAIC,EAAOtG,EAAWqG,IACKd,OAAOY,mBACfI,QAAQD,GAAMR,MAAK,SAACC,GAEnC,IAAMS,EAAOT,EAAOS,KACpB1L,aAAaU,QAAQ,eAAgBgL,EAAK7L,cAC1C6L,EAAKC,aACAX,MAAK,SAASY,GACX5L,aAAaU,QAAQ,UAAWkL,MAEnCN,OAAM,SAAS5L,GACZK,QAAQiB,IAAI,gBAAiBtB,GAC7BD,EAAa,wBAErB,EAAKiC,MAAMZ,wBACZwK,OAAM,SAAC5L,GACN,EAAKuI,SAAS,CAAC8B,gBAAgB,IAC/BhK,QAAQiB,IAAI,oBAAqBtB,GACjCD,EAAa,yB,0DAxJTqF,GACR,GAAIA,EAAKC,SAAWD,EAAKpF,MACrB,OACI,qBAAKiC,UAAU,mBAAf,SACI,qBAAKA,UAAU,SAAf,SAAyBmD,EAAKpF,Y,+BA4J1C,OAHIgE,KAAKhC,MAAMuC,iBACX/D,EAAQC,KAAK,KAGb,qBAAKwB,UAAU,kBAAkBN,GAAIgG,KAAOC,YAA5C,SACI,qBAAK3F,UAAU,MAAf,SACI,qBAAKA,UAAU,mCAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,4CAEJ,qBAAKA,UAAU,YAAf,SACK+B,KAAKjB,+B,GAjLNkB,IAAMC,WA+MhCiI,GAAoBtG,aAAU,CAChCC,KAAM,aACNC,SAtBc,SAACP,GACf,IAAMQ,EAAS,GAOf,OANIR,EAAWsC,WACX9B,EAAO8B,SAAW,iCAEnBtC,EAAWsC,UAA2C,KAA/BtC,EAAWsC,SAAS3E,SAC1C6C,EAAO8B,SAAW,yCAEf9B,IAYeH,CAGvBqE,IAEYzF,gBAdQ,SAACC,GACpB,MAAO,CAACH,gBAAiBG,EAAMG,OAAOC,uBAaH,CAAC1D,sBAAzBqD,CAA8C0H,I,oBCzNhDC,GAAe,yDAAM,WAAO/K,EAAU8E,GAAjB,eAAA/F,EAAA,+EAEH4J,GAAwBnI,IAAI,gBAAiB,CAChEO,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAJ7B,OAEpBO,EAFoB,OAO1BO,EAAS,CAACE,KAAMC,EAAyBM,QAAShB,EAASG,OAPjC,gDAStB,KAAEH,UAAgC,MAApB,KAAEA,SAASC,QACzBZ,IAAemL,KAAf,sBAAoB,4BAAAlL,EAAA,sEACO4J,GAAwBnI,IAAI,gBAAiB,CAChEO,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAHvC,OACVO,EADU,OAMhBO,EAAS,CAACE,KAAMC,EAAyBM,QAAShB,EAASG,OAN3C,4CAQlB2K,OAAM,SAAU9C,GACd/I,EAAa,qBAnBK,yDAAN,yDA2FfsM,GAAY,SAAC1K,GAAD,8CAAQ,WAAON,EAAU8E,GAAjB,eAAA/F,EAAA,+EAEF4J,GAAwBnI,IAAxB,iBAAsCF,EAAtC,KAA6C,CAChES,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAJ9B,OAEnBO,EAFmB,OAOzBO,EAAS,CAACE,KAAMC,EAAwBM,QAAShB,EAASG,OAPjC,gDASrB,KAAEH,UAAgC,MAApB,KAAEA,SAASC,QACzBZ,IAAemL,KAAf,sBAAoB,4BAAAlL,EAAA,sEACO4J,GAAwBnI,IAAxB,iBAAsCF,EAAtC,KAA6C,CAChES,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAHvC,OACVO,EADU,OAMhBO,EAAS,CAACE,KAAMC,EAAwBM,QAAShB,EAASG,OAN1C,4CAQlB2K,OAAM,SAAU9C,GACd/I,EAAa,qBAnBI,yDAAR,yDC5FnBuM,G,kLAEEtI,KAAKhC,MAAMuK,e,mCAKX,OAAOvI,KAAKhC,MAAMwK,MAAMnK,KAAI,SAAC2J,EAAMzJ,GAC/B,OACI,+BACI,6BAAKyJ,EAAKS,cACV,6BAAKT,EAAKrG,OACV,6BAAKqG,EAAKlE,WACV,6BAAKkE,EAAKU,aACV,6BAAKV,EAAKW,eACV,6BAAKX,EAAKY,WAAa,UAAY,WACnC,6BAAI,cAAC,IAAD,CAAMtI,GAAE,sBAAiB0H,EAAKrK,IAAMM,UAAU,kBAA9C,oBACJ,6BACI,cAAC,IAAD,CAAMqC,GAAE,+BAA0B0H,EAAKrK,IACjCM,UAAU,kBADhB,SACmC+J,EAAKY,WAAa,UAAY,YAGrE,6BAAI,cAAC,IAAD,CAAMtI,GAAE,wBAAmB0H,EAAKrK,IAAMM,UAAU,iBAAhD,wBAbCM,Q,+BAoBjB,OAAKyB,KAAKhC,MAAMuC,gBAGXP,KAAKhC,MAAMwK,MAMZ,cAAC,IAAMhI,SAAP,UACI,cAAC,GAAD,CACItC,MAAM,aACNC,SAAS,oCACTC,QAAS,CAAC,cAAe,OAAQ,QAAS,aAAc,UACpD,SAAU,SAAU,SAAU,UAClCI,OAAQwB,KAAK6I,iBAXd,cAAC,GAAD,IAHA,cAAC,IAAD,CAAUvI,GAAG,qB,GA9BRL,IAAMC,WAyDfO,gBANS,SAACC,GACrB,MAAO,CACH8H,MAAO9H,EAAM8H,MAAM5H,QACnBL,gBAAiBG,EAAMG,OAAOC,uBAGE,CAACyH,WDQf,yDAAM,WAAOlL,EAAU8E,GAAjB,eAAA/F,EAAA,+EAEH4J,GAAwBnI,IAAI,SAAU,CACvDO,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAJ/B,OAEpBO,EAFoB,OAOxBO,EAAS,CAACE,KAAMC,EAAyBM,QAAShB,EAASG,OAPnC,gDAShB,KAAEH,UAAgC,MAApB,KAAEA,SAASC,QACzBZ,IAAemL,KAAf,sBAAoB,4BAAAlL,EAAA,sEACO4J,GAAwBnI,IAAI,SAAU,CACzDO,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAHvC,OACVO,EADU,OAMhBO,EAAS,CAACE,KAAMC,EAAyBM,QAAShB,EAASG,OAN3C,4CAQlB2K,OAAM,SAAU9C,GACd/I,EAAa,qBAnBD,yDAAN,0DCRX0E,CAAuC6H,IC7DhDQ,G,4MAWFC,gBAAkB,YAA0B,IAAxB7H,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,KACxBnD,EAAS,qBAAiBmD,EAAKpF,OAASoF,EAAKC,QAAU,yBAA0B,gBACvF,OACI,qBAAKpD,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAWA,EAAhB,UACI,gCAAQkD,IACR,qDAAYD,GAAZ,IAAmBjD,UAAU,eAA7B,UACI,wBAAQuI,UAAQ,EAACwC,MAAM,GAAvB,sCACC,EAAKhL,MAAMiL,OAAO5K,KAAI,SAAA6K,GAAI,OAAI,wBAAsBF,MAAOE,EAAKvL,GAAlC,SAAuCuL,EAAKvH,MAA/BuH,EAAKvL,WAEpD,EAAK2D,YAAYF,W,EAOtC+H,cAAgB,YAA0B,IAAxBjI,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,KACtBnD,EAAS,qBAAiBmD,EAAKpF,OAASoF,EAAKC,QAAU,yBAA0B,gBACvF,OACI,qBAAKpD,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAWA,EAAhB,UACI,gCAAQkD,IACR,qDAAYD,GAAZ,IAAmBjD,UAAU,eAA7B,UACI,wBAAQuI,UAAQ,EAACwC,MAAM,GAAvB,sCACC,EAAKhL,MAAMoL,SAAS/K,KAAI,SAAA6K,GAAI,OAAI,wBAAsBF,MAAOE,EAAKvL,GAAlC,SAAuCuL,EAAKvH,MAA/BuH,EAAKvL,WAEtD,EAAK2D,YAAYF,W,EAOtCH,YAAc,YAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,MAAO5D,EAAgB,EAAhBA,KAAM6D,EAAU,EAAVA,KAC1BnD,EAAS,qBAAiBmD,EAAKpF,OAASoF,EAAKC,QAAU,yBAA0B,gBACvF,OACI,qBAAKpD,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAWA,EAAhB,UACI,gCAAQkD,IACP,EAAKnD,MAAMqL,WAAqB,UAARlI,EACrB,mDAAWD,GAAX,IAAkBjD,UAAU,eAAeV,KAAMA,EAAMiJ,UAAQ,KAC7D,mDAAWtF,GAAX,IAAkBjD,UAAU,eAAeV,KAAMA,KAEtD,EAAK+D,YAAYF,W,EAOtCG,SAAW,SAACC,GACR,EAAKxD,MAAMuD,SAASC,GACpBnF,QAAQiB,IAAI,gBAAiBkE,I,0DAjErBJ,GACR,GAAIA,EAAKC,SAAWD,EAAKpF,MACrB,OACI,qBAAKiC,UAAU,mBAAf,SACI,qBAAKA,UAAU,SAAf,SAAyBmD,EAAKpF,Y,+BAiE1C,OACI,qBAAKiC,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,4BAEJ,qBAAKA,UAAU,YAAf,SACI,uBACIsD,SAAUvB,KAAKhC,MAAMyD,aAAazB,KAAKuB,UAD3C,UAII,cAACG,GAAA,EAAD,CACIC,KAAK,WACLC,UAAW5B,KAAKiB,YAChBE,MAAM,QACN5D,KAAK,SAET,cAACmE,GAAA,EAAD,CACIC,KAAK,OACLC,UAAW5B,KAAKiB,YAChBE,MAAM,OACN5D,KAAK,SAET,cAACmE,GAAA,EAAD,CACIC,KAAK,cACLC,UAAW5B,KAAKiB,YAChBE,MAAM,cACN5D,KAAK,SAET,cAACmE,GAAA,EAAD,CACIC,KAAK,aACLC,UAAW5B,KAAK+I,gBAChB5H,MAAM,aACN5D,KAAK,WAET,cAACmE,GAAA,EAAD,CACIC,KAAK,UACLC,UAAW5B,KAAKmJ,cAChBhI,MAAM,UACN5D,KAAK,WAET,wBACIU,UAAU,mCACVV,KAAK,SAFT,sC,GAlHb0C,IAAMC,WAsJd2B,gBAAU,CACrBC,KAAM,WACNC,SAtBc,SAACP,GACf,IAAMQ,EAAS,GAgBf,OAfIR,EAAWsC,WACX9B,EAAO8B,SAAW,iCAElBtC,EAAWG,OACXK,EAAOL,KAAO,yBAEdH,EAAWiH,cACXzG,EAAOyG,YAAc,gCAErBjH,EAAW8H,aACXtH,EAAOsH,WAAa,yCAEpB9H,EAAW+H,UACXvH,EAAOuH,QAAU,gCAEdvH,IAGIH,CAGZiH,ICrJUU,GAAc,yDAAM,WAAMnM,GAAN,eAAAjB,EAAA,+EAEF4J,GAAwBnI,IAAI,oBAAqB,CACpEO,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAJ9B,OAEnBO,EAFmB,OAOzBT,QAAQiB,IAAI,mBAAoBR,EAASG,MACzCI,EAAS,CAACE,KAAMC,EAA4BM,QAAShB,EAASG,OARrC,gDAUrB,KAAEH,UAAgC,MAApB,KAAEA,SAASC,QACzBZ,IAAemL,KAAf,sBAAoB,4BAAAlL,EAAA,sEACO4J,GAAwBnI,IAAI,oBAAqB,CACpEO,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAHvC,OACVO,EADU,OAMhBO,EAAS,CAACE,KAAMC,EAA4BM,QAAShB,EAASG,OAN9C,4CAQlB2K,OAAM,SAAU9C,GACd/I,EAAa,qBApBI,yDAAN,uDCArBkG,G,4MAMFV,SAAW,SAACC,GACR,EAAKxD,MAAMyL,WAAWjI,I,kEALtBxB,KAAKhC,MAAMoK,eACXpI,KAAKhC,MAAMwL,gB,+BAOX,OAAKxJ,KAAKhC,MAAMiL,QAAWjJ,KAAKhC,MAAMoL,SAIlC,cAAC,IAAM5I,SAAP,UACI,cAAC,GAAD,CACIe,SAAUvB,KAAKuB,SACf0H,OAAUjJ,KAAKhC,MAAMiL,OACrBG,SAAYpJ,KAAKhC,MAAMoL,aAPxB,cAAC,GAAD,Q,GAXEnJ,IAAMC,WA6BZO,gBAJS,SAACC,GACrB,MAAO,CAACuI,OAAQvI,EAAM8H,MAAMS,OAAQG,SAAU1I,EAAMgJ,QAAQN,YAGxB,CAACK,WJAf,SAAAjI,GAAU,8CAAI,WAAOnE,EAAU8E,GAAjB,eAAA/F,EAAA,+EAET4J,GAAwBnJ,KAAK,UAA7B,gBAA4C2E,GAAa,CAC5EpD,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAJvB,OAOR,OALlBO,EAF0B,QAOnBC,QACTvB,EAAe,4BAEnB6B,EAAS,CAACE,KAAMC,EAAyBM,QAAShB,EAASG,OAC3DT,EAAQC,KAAK,UACbsK,OAAO4C,SAASC,SAZgB,kDAc5B,KAAE9M,UAAgC,MAApB,KAAEA,SAASC,QACzBZ,IAAemL,KAAf,sBAAoB,4BAAAlL,EAAA,sEACW4J,GAAwBnJ,KAAK,UAA7B,gBAA4C2E,GAAa,CAC5EpD,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAH3C,OAMY,OALlBO,EADM,QAMCC,QACTvB,EAAe,4BAEnB6B,EAAS,CAACE,KAAMC,EAAyBM,QAAShB,EAASG,OAC3DT,EAAQC,KAAK,UAVD,4CAYlBmL,OAAM,SAAU9C,GACd/I,EAAa,qBAGrBA,EAAa,4BA/BmB,0DAAJ,yDIAiBqM,gBAAcoB,gBAApD/I,CAAkEwB,IC1B3E4H,G,uKAGE,OAAM7J,KAAKhC,MAAMuC,gBAKb,cAAC,IAAMC,SAAP,UACI,eAACsJ,GAAA,EAAD,CAAMC,iBAAiB,QAAvB,UACI,cAACC,GAAA,EAAD,CAAKC,SAAS,QAAQ/L,MAAM,aAA5B,SACI,cAAC,GAAD,MAEJ,cAAC8L,GAAA,EAAD,CAAKC,SAAS,SAAS/L,MAAM,kBAA7B,SACI,cAACgM,GAAD,WAVL,cAAC,IAAD,CAAU5J,GAAG,qB,GAJJL,IAAMC,WAyBnBO,gBAHS,SAACC,GACrB,MAAO,CAACH,gBAAiBG,EAAMG,OAAOC,uBAE3BL,CAAyBoJ,IC3BlCM,G,4MAOF5I,SAAW,SAACC,GACR,EAAKxD,MAAMoM,SAAS,EAAKpM,MAAMsE,MAAMC,OAAO5E,GAAI6D,I,kEANhDxB,KAAKhC,MAAMqK,UAAUrI,KAAKhC,MAAMsE,MAAMC,OAAO5E,IAC7CqC,KAAKhC,MAAMoK,eACXpI,KAAKhC,MAAMwL,gB,+BAQX,IAAKxJ,KAAKhC,MAAMgK,OAAShI,KAAKhC,MAAMiL,SAAWjJ,KAAKhC,MAAMoL,SACtD,OAAO,cAAC,GAAD,IAEX,IAAMiB,EAAY5H,KAAEC,KAAK1C,KAAKhC,MAAMgK,KAAM,WAAY,OAAQ,eAC9D,OACI,cAAC,GAAD,CACIzG,SAAUvB,KAAKuB,SAEfiB,cAAiB6H,EACjBpB,OAAQjJ,KAAKhC,MAAMiL,OACnBG,SAAUpJ,KAAKhC,MAAMoL,SACrBC,WAAW,Q,GAvBFpJ,IAAMC,WAgChBO,gBAHS,SAACC,EAAOiC,GAC5B,MAAO,CAACqF,KAAMtH,EAAM8H,MAAMR,KAAMiB,OAAOvI,EAAM8H,MAAMS,OAAQG,SAAS1I,EAAMgJ,QAAQN,YAE9C,CAACf,aAAW+B,SNqF5B,SAACzM,EAAI6D,GAAL,8CAAoB,WAAMnE,GAAN,eAAAjB,EAAA,+EAEb4J,GAAwBpD,MAAxB,iBAAwCjF,EAAxC,KAA+C6D,EAAY,CAC9EpD,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAJnB,OAE9BO,EAF8B,OAOpCO,EAAS,CAACE,KAAMC,EAAuBM,QAAShB,EAASG,OACzDzB,EAAe,yBACfgB,EAAQC,KAAK,UATuB,gDAWhC,KAAEK,UAAgC,MAApB,KAAEA,SAASC,QACzBZ,IAAemL,KAAf,sBAAoB,4BAAAlL,EAAA,sEACO4J,GAAwBpD,MAAxB,iBAAwCjF,GAAM6D,EAAY,CAC7EpD,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAHvC,OACVO,EADU,OAMhBO,EAAS,CAACE,KAAMC,EAAuBM,QAAShB,EAASG,OACzDzB,EAAe,yBACfgB,EAAQC,KAAK,KARG,4CAUlBmL,OAAM,SAAU9C,GACd/I,EAAa,qBAvBe,yDAApB,uDMrFsCqM,gBAAcoB,gBAA7D/I,CAA2E0J,ICjCpFG,G,4MAMF/I,SAAW,SAACgJ,GACR,EAAKvM,MAAMwM,iBAAiB,EAAKxM,MAAMsE,MAAMC,OAAO5E,GAAI4M,I,kEAJxDvK,KAAKhC,MAAMqK,UAAUrI,KAAKhC,MAAMsE,MAAMC,OAAO5E,M,sCAO/B,IAAD,OACb,OACI,eAAC,IAAM6C,SAAP,WACI,cAAC,IAAD,CAAMF,GAAG,SAASrC,UAAU,oBAA5B,oBACA,wBACIA,UAAU,iBACV8E,QAAS,kBAAI,EAAKxB,UAAS,IAF/B,wB,6CAQa,IAAD,OACpB,OACI,eAAC,IAAMf,SAAP,WACI,cAAC,IAAD,CAAMF,GAAG,SAASrC,UAAU,oBAA5B,oBACA,wBACIA,UAAU,iBACV8E,QAAS,kBAAI,EAAKxB,UAAS,IAF/B,0B,sCASR,OAAIvB,KAAKhC,MAAMgK,KAGT,oCAAN,OAA2ChI,KAAKhC,MAAMgK,KAAKrG,MAFhD,oC,6CAKX,OAAI3B,KAAKhC,MAAMgK,KAGT,qCAAN,OAA4ChI,KAAKhC,MAAMgK,KAAKrG,MAFjD,sC,+BAMX,OAAK3B,KAAKhC,MAAMgK,KAGbhI,KAAKhC,MAAMgK,KAAKY,WAEX,eAAC5F,GAAA,EAAD,CAAOC,MAAM,EAAMC,OAAQ,kBAAI1G,EAAQC,KAAK,WAA5C,UACI,cAACuG,GAAA,EAAMG,OAAP,2BACA,cAACH,GAAA,EAAMI,KAAP,UAAapD,KAAKyK,yBAClB,cAACzH,GAAA,EAAMK,OAAP,UAAerD,KAAK0K,4BAK5B,eAAC1H,GAAA,EAAD,CAAOC,MAAM,EAAMC,OAAQ,kBAAI1G,EAAQC,KAAK,WAA5C,UACI,cAACuG,GAAA,EAAMG,OAAP,yBACA,cAACH,GAAA,EAAMI,KAAP,UAAapD,KAAKjB,kBAClB,cAACiE,GAAA,EAAMK,OAAP,UAAerD,KAAKsD,qBAfjB,S,GAjDKrD,IAAMC,WA0EfO,gBAJS,SAACC,EAAOiC,GAC5B,MAAO,CAACqF,KAAMtH,EAAM8H,MAAMR,QAGU,CAACK,aAAWmC,iBP2EpB,SAAC7M,EAAI4M,GAAL,8CAAmB,WAAMlN,GAAN,eAAAjB,EAAA,sEAErCoF,EAAa,CAACoH,WAAY2B,GAFW,SAGrCvE,GAAwBpD,MAAxB,iBAAwCjF,EAAxC,KAA+C6D,EAAY,CAC7DpD,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cALZ,OAQ3Cc,EAAS,CAACE,KAAMC,IAChBhC,EAAe,sBACfgB,EAAQC,KAAK,UAV8B,gDAcvC,KAAEK,UAAgC,MAApB,KAAEA,SAASC,QACzBZ,IAAemL,KAAf,sBAAoB,4BAAAlL,EAAA,6DACVoF,EAAa,CAACoH,WAAY2B,GADhB,SAEVvE,GAAwBpD,MAAxB,iBAAwCjF,EAAxC,KAA+C6D,EAAY,CAC7DpD,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAJvC,OAOhBc,EAAS,CAACE,KAAMC,IAChBhC,EAAe,sBACfgB,EAAQC,KAAK,UATG,4CAWlBmL,OAAM,SAAU9C,GACd/I,EAAa,qBA3BsB,yDAAnB,wDO3EjB0E,CAAwD6J,IC1EjEK,G,4MAMFpJ,SAAW,WACP,EAAKvD,MAAM4M,WAAW,EAAK5M,MAAMsE,MAAMC,OAAO5E,K,kEAJ9CqC,KAAKhC,MAAMqK,UAAUrI,KAAKhC,MAAMsE,MAAMC,OAAO5E,M,sCAQ7C,OACI,eAAC,IAAM6C,SAAP,WACI,cAAC,IAAD,CAAMF,GAAG,SAASrC,UAAU,oBAA5B,oBACA,wBACIA,UAAU,iBACV8E,QAAS/C,KAAKuB,SAFlB,yB,sCASR,OAAIvB,KAAKhC,MAAMgK,KAGT,qCAAN,OAA4ChI,KAAKhC,MAAMgK,KAAKrG,MAFjD,qC,+BAMX,OACI,eAACqB,GAAA,EAAD,CAAOC,MAAM,EAAMC,OAAQ,kBAAI1G,EAAQC,KAAK,WAA5C,UACI,cAACuG,GAAA,EAAMG,OAAP,0BACA,cAACH,GAAA,EAAMI,KAAP,UAAapD,KAAKjB,kBAClB,cAACiE,GAAA,EAAMK,OAAP,UAAerD,KAAKsD,yB,GAlCXrD,IAAMC,WA4ChBO,gBAJS,SAACC,EAAOiC,GAC5B,MAAO,CAACqF,KAAMtH,EAAM8H,MAAMR,QAGU,CAACK,aAAWuC,WR4I1B,SAAAjN,GAAE,8CAAI,WAAMN,GAAN,eAAAjB,EAAA,sEAElBoF,EAAa,CAACqJ,WAAW,GAFP,SAGlB7E,GAAwBpD,MAAxB,iBAAwCjF,EAAxC,KAA+C6D,EAAY,CAC7DpD,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAL/B,OAQxBc,EAAS,CAACE,KAAMC,EAAyBM,QAASH,IAClDnC,EAAe,6BACfgB,EAAQC,KAAK,UAVW,gDAapB,KAAEK,UAAgC,MAApB,KAAEA,SAASC,QACzBZ,IAAemL,KAAf,sBAAoB,4BAAAlL,EAAA,6DACVoF,EAAa,CAACqJ,WAAW,GADf,SAEV7E,GAAwBpD,MAAxB,iBAAwCjF,EAAxC,KAA+C6D,EAAY,CAC7DpD,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAJvC,OAOhBc,EAAS,CAACE,KAAMC,EAAyBM,QAASH,IAClDnC,EAAe,6BACfgB,EAAQC,KAAK,UATG,4CAWlBmL,OAAM,SAAU9C,GACd/I,EAAa,qBA1BG,yDAAJ,wDQ5Ib0E,CAAkDkK,IClBpDG,GAAkB,SAACvI,GAAD,8CAAY,WAAMlF,GAAN,eAAAjB,EAAA,sEAEnCiB,EAAS,CAACE,KAAMC,IAFmB,SAGZwI,GAAwBnI,IAAI,wBAA0B0E,EAAQ,CACjFnE,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cALpB,OAG7BO,EAH6B,OAQnCO,EAAS,CAACE,KAAMC,EAA2BM,QAAShB,EAASG,OAC7DI,EAAS,CAACE,KAAMC,IATmB,gDAW/B,KAAEV,UAAgC,MAApB,KAAEA,SAASC,QACzBZ,IAAemL,KAAf,sBAAoB,4BAAAlL,EAAA,sEACW4J,GAAwBnI,IAAI,wBAA0B0E,EAAQ,CACjFnE,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAH3C,OACNO,EADM,OAMZO,EAAS,CAACE,KAAMC,EAA2BM,QAAShB,EAASG,OANjD,4CAQlB2K,OAAM,SAAU9C,GACd/I,EAAa,qBArBc,yDAAZ,uDCxBzBgP,G,4MAWFC,aAAe,SAACC,GACZ,MAAqB,OAAjBA,EAAQlO,OAEJ,iCACI,mBAAGkB,UAAU,gBAAgBS,MAAO,CAACwM,MAAM,QAASC,aAAc,SADtE,QAQJ,iCACI,mBAAGlN,UAAU,gBAAgBS,MAAO,CAACwM,MAAM,MAAOC,aAAc,SADpE,U,EAORC,oBAAsB,SAACH,GACnB,MAA6B,YAAzBA,EAAQI,eAEJ,iCACI,mBAAGpN,UAAU,gBAAgBS,MAAO,CAACwM,MAAM,QAASC,aAAc,SADtE,UAOJ,iCACI,mBAAGlN,UAAU,gBAAgBS,MAAO,CAACwM,MAAM,MAAOC,aAAc,SADpE,Y,EAORpM,cAAgB,WACZ,IAAMQ,EAAQ,CACV,CAAErB,MAAO,UAAWsB,MAAO,gBAC3B,CAAEtB,MAAO,UAAWsB,MAAO,gBAC3B,CAAEtB,MAAO,SAAUsB,MAAO,SAAU8L,OAAQ,SAAAL,GAAO,OAAI,EAAKD,aAAaC,KACzE,CAAE/M,MAAO,cAAesB,MAAO,eAC/B,CAAEtB,MAAO,UAAWsB,MAAO,iBAAkB8L,OAAQ,SAAAL,GAAO,OAAI,EAAKG,oBAAoBH,MAE7F,YAAsBhM,IAAlB,EAAKjB,MAAMf,MAA6C,IAAzB,EAAKe,MAAMf,KAAKkC,OACxC,cAAC,GAAD,IAGP,cAAC,KAAD,CACIjB,MAAM,sBACNqB,QAASA,EACTtC,KAAM,EAAKe,MAAMf,KACjBwC,QAAS,CACLC,cAAc,EACdE,QAAQ,EAGRG,eAAgB,c,kEAhE5BC,KAAKhC,MAAMuN,gBACXvL,KAAKwL,SAAWC,YAAYzL,KAAKhC,MAAMuN,cAAe,O,6CAItDG,cAAc1L,KAAKwL,Y,+BAmEnB,OACI,qBAAKvN,UAAU,YAAf,SACI,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,YAAf,SACK+B,KAAKjB,0B,GA/EGkB,IAAMC,WA6FxBO,gBAJS,SAACC,GACrB,MAAO,CAACzD,KAAMyD,EAAMiL,QAAQC,aAGQ,CAACL,cDjGZ,yDAAM,WAAMlO,GAAN,eAAAjB,EAAA,+EAEJ4J,GAAwBnI,IAAI,kBAAmB,CAClEO,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAJ5B,OAErBO,EAFqB,OAO3BO,EAAS,CAACE,KAAMC,EAAyBM,QAAShB,EAASG,OAPhC,gDASvB,KAAEH,UAAgC,MAApB,KAAEA,SAASC,QACzBZ,IAAemL,KAAf,sBAAoB,4BAAAlL,EAAA,sEACW4J,GAAwBnI,IAAI,kBAAmB,CAClEO,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAH3C,OACNO,EADM,OAMZO,EAAS,CAACE,KAAMC,EAAyBM,QAAShB,EAASG,OAN/C,4CAQlB2K,OAAM,SAAU9C,GACd/I,EAAa,qBAnBM,yDAAN,wDCiGd0E,CAA0CsK,I,uCCvFnDc,G,4MACFnL,MAAQ,CAEJoL,WAAY,KACZC,WAAY,KACZC,SAAU,KACVC,SAAU,KACV1C,QAAS,KACT2C,SAAU,KACVC,YAAa,KACbC,MAAO,M,EAOXC,mBAAqB,SAACvH,GAClBA,EAAEC,iBACF,IAAIuH,EAAYC,SAASzH,EAAEK,OAAO6D,OAG9BmD,EAAc,EAAKnO,MAAMoL,SAASoD,QAAO,SAACjD,GAAD,OAAaA,EAAQ5L,KAAO2O,KACzE,EAAK/H,SAAS,CAACgF,QAAS+C,EAAWH,YAAaA,K,EAEpDM,mBAAqB,SAAC3H,GAClBA,EAAEC,iBACF,IAAI2H,EAAaC,MAAMC,KAAK9H,EAAEK,OAAO0H,iBAAiB,SAAAC,GAAM,OAAIP,SAASO,EAAO9D,UAChF,EAAKzE,SAAS,CAAC2H,SAAUQ,K,EAE7BK,aAAe,SAACjI,GAEZ,GADAA,EAAEC,kBACG,EAAKrE,MAAMoL,aAAe,EAAKpL,MAAMsL,SAEtC,OADAjQ,EAAa,kCACN,KAEX,IAAK,EAAK2E,MAAMqL,aAAe,EAAKrL,MAAMuL,SAEtC,OADAlQ,EAAa,4BACN,KAEX,IAAK,EAAK2E,MAAM6I,QAEZ,OADAxN,EAAa,+BACN,KAEX,IAAIiR,EAAc,GACd,EAAKtM,MAAM6I,UACXyD,EAAcA,EAAc,YAAc,EAAKtM,MAAM6I,SAErD,EAAK7I,MAAMoL,aACXkB,EAAcA,EAAc,SAAW,EAAKtM,MAAMoL,WAAWmB,cAAcC,MAAM,KAAK,GAClF,EAAKxM,MAAMqL,aACXiB,EAAcA,EAAc,IAAM,EAAKtM,MAAMqL,WAAWoB,OAAS,IAAM,EAAKzM,MAAMqL,WAAWqB,SAAW,QAG5G,EAAK1M,MAAMsL,WACXgB,EAAcA,EAAc,OAAS,EAAKtM,MAAMsL,SAASiB,cAAcC,MAAM,KAAK,GAC/E,EAAKxM,MAAMuL,WACVe,EAAcA,EAAc,IAAM,EAAKtM,MAAMuL,SAASkB,OAAS,IAAM,EAAKzM,MAAMuL,SAASmB,SAAW,QAGxG,EAAK1M,MAAMwL,WACXc,EAAcA,EAAc,aAAe,EAAKtM,MAAMwL,SAASmB,KAAK,MAGxE,EAAKrP,MAAM8M,gBAAgBkC,GAC3B3Q,QAAQiB,IAAI,6BAA8B0P,EAAYM,QAAQ,KAAM,O,EAGxEC,cAAgB,SAACzI,GACbA,EAAEC,iBACF,EAAKR,SAAS,CACVuH,WAAY,KACZC,WAAY,KACZC,SAAU,KACVC,SAAU,KACV1C,QAAS,KACT2C,SAAU,KACVC,YAAa,KACbC,MAAO,Q,kEAhEXpM,KAAKhC,MAAMwL,gB,+BA6EL,IAAD,OACL,OAAKxJ,KAAKhC,MAAMoL,SAaZ,eAAC,IAAM5I,SAAP,WACI,qBAAKvC,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,aAAd,0BAEJ,qBAAKA,UAAU,YAAf,SACI,iCACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,4CACA,yBAAQA,UAAU,eAAeuP,SAAUxN,KAAKqM,mBAAhD,UACI,wBAAQrD,MAAM,MAAd,wBACChJ,KAAKhC,MAAMoL,SAAS/K,KAAI,SAAA6K,GACrB,GAAkB,QAAdA,EAAKvH,KACL,OAAO,wBAAsBqH,MAAOE,EAAKvL,GAAlC,SAAuCuL,EAAKvH,MAA/BuH,EAAKvL,eAM7C,qBAAKM,UAAU,gBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,cAAC,KAAD,CAAyBwP,MAAOC,KAAhC,SACI,cAAC,KAAD,CACIC,OAAO,SACPhQ,GAAG,qBACHwD,MAAM,mBACNyM,OAAO,aACP5E,MAAOhJ,KAAKU,MAAMoL,WAClB0B,SAAU,SAACK,GAAD,OAAU,EAAKtJ,SAAS,CAACuH,WAAY+B,KAC/CC,oBAAqB,CACjB,aAAc,uBAMlC,qBAAK7P,UAAU,gBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,cAAC,KAAD,CAAyBwP,MAAOC,KAAhC,SACI,cAAC,KAAD,CACIC,OAAO,SACPhQ,GAAG,cACHwD,MAAM,mBACN6H,MAAOhJ,KAAKU,MAAMqL,WAClByB,SAAU,SAACO,GAAD,OAAU,EAAKxJ,SAAS,CAACwH,WAAYgC,KAC/CD,oBAAqB,CACjB,aAAc,uBAMlC,qBAAK7P,UAAU,gBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,cAAC,KAAD,CAAyBwP,MAAOC,KAAhC,SACI,cAAC,KAAD,CACIC,OAAO,SACPhQ,GAAG,qBACHwD,MAAM,iBACNyM,OAAO,aACP5E,MAAOhJ,KAAKU,MAAMsL,SAClBwB,SAAU,SAACK,GAAD,OAAU,EAAKtJ,SAAS,CAACyH,SAAU6B,KAC7CC,oBAAqB,CACjB,aAAc,uBAOlC,qBAAK7P,UAAU,gBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,cAAC,KAAD,CAAyBwP,MAAOC,KAAhC,SACI,cAAC,KAAD,CACIC,OAAO,SACPhQ,GAAG,cACHwD,MAAM,iBACN6H,MAAOhJ,KAAKU,MAAMuL,SAClBuB,SAAU,SAACO,GAAD,OAAU,EAAKxJ,SAAS,CAAC0H,SAAU8B,KAC7CD,oBAAqB,CACjB,aAAc,0BAOtC,qBAAK7P,UAAU,MAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,4CACA,yBAAQ+P,UAAQ,EAAC/P,UAAU,eAAeuP,SAAUxN,KAAKyM,mBAAzD,UACI,wBAAQjG,UAAQ,EAACwC,MAAM,GAAvB,qCACChJ,KAAKU,MAAMyL,YACRnM,KAAKU,MAAMyL,YAAY,GAAGD,SAAS7N,KAAI,SAAA6K,GAAI,OAAI,wBACrBF,MAAOE,EAAK+E,WADS,SACI/E,EAAKvH,MAA/CuH,EAAK+E,eACZ,eAOtB,qBAAKhQ,UAAU,MAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,wBACIV,KAAK,SACLU,UAAU,0CACV8E,QAAS,SAAA+B,GAAC,OAAI,EAAKiI,aAAajI,IAHpC,0BAOA,wBACIvH,KAAK,SACLU,UAAU,yCACV8E,QAAS,SAAA+B,GAAC,OAAI,EAAKyI,cAAczI,IAHrC,oCAc5B,qBAAK7G,UAAU,MAAf,SACI,cAAC,GAAD,CAAWhB,KAAM+C,KAAKhC,MAAMf,KAAM+B,UAAWgB,KAAKhC,MAAMkQ,iBA9I5D,qBAAKjQ,UAAU,YAAf,SACI,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,GAAD,c,GAjGMgC,IAAMC,WA4PzBO,gBATS,SAACC,GACrB,MAAO,CACHH,gBAAiBG,EAAMG,OAAOC,oBAC9BoL,SAAUxL,EAAMgJ,QAAQwC,SACxB9C,SAAU1I,EAAMgJ,QAAQN,SACxBnM,KAAMyD,EAAMiL,QAAQwC,cACpBD,UAAWxN,EAAMiL,QAAQuC,aAGO,CAACE,YRxOd,yDAAM,WAAM/Q,GAAN,eAAAjB,EAAA,+EAEF4J,GAAwBnI,IAAI,oBAAqB,CACpEO,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAJ9B,OAEnBO,EAFmB,OAOzBO,EAAS,CAACE,KAAMC,EAA4BM,QAAShB,EAASG,OAPrC,gDASrB,KAAEH,UAAgC,MAApB,KAAEA,SAASC,QACzBZ,IAAemL,KAAf,sBAAoB,4BAAAlL,EAAA,sEACO4J,GAAwBnI,IAAI,oBAAqB,CACpEO,QAAS,CACL,cAAiB,OAAS9B,aAAaC,QAAQ,cAHvC,OACVO,EADU,OAMhBO,EAAS,CAACE,KAAMC,EAA4BM,QAAShB,EAASG,OAN9C,4CAQlB2K,OAAM,SAAU9C,GACd/I,EAAa,qBAnBI,yDAAN,uDQwO2ByN,eAAasB,oBAApDrK,CAAsEoL,IClQ/EwC,G,4MAEFC,SAAW,SAAAC,GACP,EAAKvQ,MAAM8M,gBAAgByD,I,uDAI3B,OAAKvO,KAAKhC,MAAMuC,gBAIZ,cAAC,IAAMC,SAAP,UACI,qBAAKvC,UAAU,kBAAf,SACI,cAAC,GAAD,CAAqBqQ,SAAUtO,KAAKsO,eALrC,cAAC,IAAD,CAAUhO,GAAG,qB,GARNL,IAAMC,WA0BjBO,gBANS,SAACC,GACrB,MAAO,CACHH,gBAAiBG,EAAMG,OAAOC,oBAC9B7D,KAAMyD,EAAMiL,QAAQwC,iBAGY,CAACrD,oBAA1BrK,CAA4C4N,ICO3D,IAIe5N,gBAJS,SAACC,GACrB,MAAO,CAACH,gBAAiBG,EAAMuG,KAAK1G,mBAGzBE,EA1Bf,WACI,OACI,cAAC,IAAMD,SAAP,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOgO,KAAK,IAAIC,OAAK,EAAC7M,UAAWmJ,KACjC,cAAC,IAAD,CAAOyD,KAAK,eAAeC,OAAK,EAAC7M,UAAWK,KAC5C,cAAC,IAAD,CAAOuM,KAAK,oBAAoBC,OAAK,EAAC7M,UAAWQ,KACjD,cAAC,IAAD,CAAOoM,KAAK,sBAAsBC,OAAK,EAAC7M,UAAWiB,KACnD,cAAC,IAAD,CAAO2L,KAAK,eAAeC,OAAK,EAAC7M,UAAW4B,KAC5C,cAAC,IAAD,CAAOgL,KAAK,UAAUC,OAAK,EAAC7M,UAAW6B,KACvC,cAAC,IAAD,CAAO+K,KAAK,gBAAgBC,OAAK,EAAC7M,UAAWsE,KAC7C,cAAC,IAAD,CAAOsI,KAAK,WAAWC,OAAK,EAAC7M,UAAWqC,KACxC,cAAC,IAAD,CAAOuK,KAAK,UAAUC,OAAK,EAAC7M,UAAWiI,KACvC,cAAC,IAAD,CAAO2E,KAAK,kBAAkBC,OAAK,EAAC7M,UAAWuI,KAC/C,cAAC,IAAD,CAAOqE,KAAK,2BAA2BC,OAAK,EAAC7M,UAAW0I,KACxD,cAAC,IAAD,CAAOkE,KAAK,oBAAoBC,OAAK,EAAC7M,UAAW+I,KACjD,cAAC,IAAD,CAAO6D,KAAK,iBAAiBC,OAAK,EAAC7M,UAAWyM,a,UCd/C5N,eAAQ,KAAM,CAACiO,WvBHJ,yDAAM,WAAOrR,EAAU8E,GAAjB,SAAA/F,EAAA,sDACxBE,aAAaC,QAAQ,UACrBf,EAAe,4BAEnB6B,EAAS,CAACE,KAAMC,IAJY,2CAAN,0DuBGXiD,EAjBY,SAACzC,GACxB,IAAM2Q,EAAeC,iBAAO,MAK5B,OACI,8BACI,cAAC,KAAD,CACIC,IAAKF,EACLG,QAAS,MACTC,OATG,WACX1S,QAAQiB,IAAI,qBCoBL0R,IC1BXC,GACA1O,GDyBWyO,GAnBf,WAEE,OADE3S,QAAQiB,IAAI,QAASjC,yXAErB,sBAAK4C,UAAU,UAAf,UACI,cAAC,GAAD,IACA,eAAC,IAAD,CAAQzB,QAASA,EAAjB,UACE,cAAC,GAAD,IACA,sBAAKyB,UAAU,aAAf,UACI,cAAC,GAAD,IACA,qBAAKA,UAAU,UAAf,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,c,oBEnBRiR,GAAgB,CAClBC,UAAW,KACXC,UAAW,KACXxO,QAAS,IA8BEyO,GA1BO,WAAkC,IAAjC3O,EAAgC,uDAA1BwO,GAAeI,EAAW,uCACnD,OAAQA,EAAO/R,MACX,KAAKC,EAED,OAAO,6BAAIkD,GAAX,IAAkBE,QAAQ,6BAAKF,EAAME,SAAY6B,KAAE8M,QAAQD,EAAOxR,QAAS,SAC/E,KAAKN,EAGL,KAAKA,EAGL,KAAKA,EAKD,OAAO,6BAAIkD,GAAX,IAAkBE,QAAQ,6BAAIF,EAAME,SAAX,mBAAqB0O,EAAOxR,QAAQH,GAAK2R,EAAOxR,YAC7E,KAAKN,EAED,IAAM+J,EAAS9E,KAAE+M,KAAK9O,EAAME,QAAS0O,EAAOxR,SAC5C,OAAO,6BAAI4C,GAAX,IAAkBE,QAAQ,gBAAK2G,KACnC,QACI,OAAO7G,ID3BhBpE,aAAaC,QAAQ,UACpB0S,GAAQ3S,aAAaC,QAAQ,SAC7BgE,IAAkB,IAElB0O,GAAQ,KACR1O,IAAkB,GAGtB,IAAM2O,GAAgB,CAClB3O,gBAAiBA,GACjB0O,MAAOA,IAoBIQ,GAjBK,WAAkC,IAAjC/O,EAAgC,uDAA1BwO,GAAeI,EAAW,uCACjD,OAAQA,EAAO/R,MACX,KAAKC,EACD,OAAG8R,EAAOxR,QAAQmR,OACd3S,aAAaU,QAAQ,QAASsS,EAAOxR,QAAQmR,OACtC,CAAC1O,iBAAiB,EAAM0O,MAAOK,EAAOxR,QAAQmR,SAEzD3S,aAAaoT,WAAW,SACjB,CAACnP,iBAAiB,EAAO0O,MAAO,OAC3C,KAAKzR,EAED,OADAlB,aAAaoT,WAAW,SACjB,CAACnP,iBAAiB,EAAO0O,MAAO,MAC3C,QACI,OAAOvO,IE3BbwO,GAAgB,CAClBpO,sBAHwBxE,aAAaC,QAAQ,WAI7C2L,QAAS5L,aAAaC,QAAQ,WAC9BJ,aAAcG,aAAaC,QAAQ,iBA+BxBoT,GA5Ba,WAAkC,IAAjCjP,EAAgC,uDAA1BwO,GAAeI,EAAW,uCACzD,OAAQA,EAAO/R,MACX,KAAKC,EACD,OAAO,6BAAIkD,GAAX,IACII,qBAAqB,EACrBoH,QAAS5L,aAAaC,QAAQ,WAC9BJ,aAAcG,aAAaC,QAAQ,kBAE3C,KAAKiB,EACD,OAAO,6BAAIkD,GAAX,IACII,qBAAqB,EACrBoH,QAASoH,EAAOxR,QAAQX,SACxBhB,aAAcmT,EAAOxR,QAAQZ,gBAErC,KAAKM,EAID,OAHAlB,aAAaoT,WAAW,WACxBpT,aAAaoT,WAAW,gBACxBpT,aAAaoT,WAAW,QACjB,6BAAIhP,GAAX,IACII,qBAAqB,EACrBoH,QAAS,KACT/L,aAAc,OAEtB,QACI,OAAOuE,ICCJkP,GA/BK,WAAyB,IAAxBlP,EAAuB,uDAAf,GAAI4O,EAAW,uCACxC,OAAQA,EAAO/R,MACX,KAAKC,EAGD,OAFAnB,QAAQiB,IAAI,kCACZjB,QAAQiB,IAAI,oBAAZ,6BAAqCoD,GAAU4O,EAAOxR,UAC/C,6BAAI4C,GAAU4O,EAAOxR,SAChC,KAAKN,EAEL,KAAKA,EAGL,KAAKA,EACD,OAAO,6BAAIkD,GAAX,IAAkBsH,KAAK,6BAAKtH,EAAMsH,MAASsH,EAAOxR,WACtD,KAAKN,EACD,OAAOkD,EACX,KAAKlD,EAED,IAAMG,EAAK4O,SAAS+C,EAAOxR,SAC3BzB,QAAQiB,IAAI,OAAQK,GACpB,IAAM4J,EAAS7G,EAAME,QAAQ4L,QAAO,SAAAtD,GAAI,OAAIA,EAAKvL,KAAMA,KAEvD,OADAtB,QAAQiB,IAAI,WAAYiK,GACjB,6BAAI7G,GAAX,IAAkBE,QAAS2G,IAC/B,KAAK/J,EACD,IAAMyL,EAAS,CAACA,OAAQqG,EAAOxR,SAC/B,OAAO,6BAAI4C,GAAUuI,GAEzB,QACI,OAAOvI,IClBJmP,GAXQ,WAAuB,IAAtBnP,EAAqB,uDAAf,GAAI4O,EAAW,uCACzC,OAAQA,EAAO/R,MACX,KAAKC,EACD,OAAO,6BAAIkD,GAAX,IAAkB0I,SAAUkG,EAAOxR,UACvC,KAAKN,EACD,OAAO,6BAAIkD,GAAX,IAAkBwL,SAAUoD,EAAOxR,UACvC,QACI,OAAO4C,ICPbwO,GAAgB,CAClBtD,UAAW,GACXuC,cAAe,GACfD,WAAW,GAkBA4B,GAfc,WAAkC,IAAjCpP,EAAgC,uDAA1BwO,GAAeI,EAAW,uCAC1D,OAAQA,EAAO/R,MACX,KAAKC,EACD,OAAO,6BAAIkD,GAAX,IAAkBkL,UAAW0D,EAAOxR,UACxC,KAAKN,EACD,OAAO,6BAAIkD,GAAX,IAAkByN,cAAemB,EAAOxR,UAC5C,KAAKN,EACD,OAAO,6BAAIkD,GAAX,IAAkBwN,WAAW,IACjC,KAAK1Q,EACD,OAAO,6BAAIkD,GAAX,IAAkBwN,WAAW,IACjC,QACI,OAAOxN,ICTJqP,eAAgB,CAC3BjO,KAAMkO,KACNpS,QAASyR,GACTpI,KAAMwI,GACN5O,OAAQ8O,GACRnH,MAAOoH,GACPlG,QAASmG,GACTlE,QAASmE,KCRPG,GAAmBlJ,OAAOmJ,sCAAwCC,IAElEC,GAAQC,YAAYC,GAAUL,GAAiBM,YAAgBC,OAGrEC,IAASnF,OACL,cAAC,IAAD,CAAU8E,MAAOA,GAAjB,SACI,cAAC,GAAD,MAEJM,SAASC,eAAe,W","file":"static/js/main.699300f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"custom_form\":\"LoginForm_custom_form__1IEDK\"};","import { createBrowserHistory } from 'history';\r\n\r\n\r\nexport default createBrowserHistory();","export const CREATE_STREAM = \"CREATE_STREAM\";\r\nexport const FETCH_STREAMS = \"FETCH_STREAMS\";\r\nexport const FETCH_STREAM = \"FETCH_STREAM\";\r\nexport const DELETE_STREAM = \"DELETE_STREAM\";\r\nexport const EDIT_STREAM = \"EDIT_STREAM\";\r\nexport const LOG_IN = \"LOG_IN\";\r\nexport const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const USER_LOG_IN = \"USER_LOG_IN\";\r\nexport const USER_LOG_OUT = \"USER_LOG_OUT\";\r\nexport const USER_GROUPS = \"USER_GROUPS\";\r\nexport const REFRESH_TOKEN = \"REFRESH_TOKEN\";\r\nexport const CREATE_USER = \"CREATE_USER\";\r\nexport const FETCH_USERS = \"FETCH_USERS\";\r\nexport const FETCH_USER = \"FETCH_USER\";\r\nexport const DELETE_USER = \"DELETE_USER\";\r\nexport const EDIT_USER = \"EDIT_USER\";\r\nexport const FETCH_SECTIONS = \"FETCH_SECTIONS\";\r\nexport const FETCH_MACHINES = \"FETCH_MACHINES\";\r\nexport const BLOCK_UNBLOCK_USER = \"BLOCK_UNBLOCK_USER\";\r\nexport const LIVE_STATUS = \"LIVE_STATUS\";\r\nexport const FILTERED_DATA = \"FILTERED_DATA\";\r\nexport const IS_FETCHING = \"IS_FETCHING\";\r\nexport const IS_FETCHED = \"IS_FETCHED\";","import axios from 'axios';\r\n\r\n\r\nexport default axios.create({\r\n    baseURL: `${process.env.REACT_APP_REFRESH_TOKEN_URL}`,\r\n})","import {toast} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nexport const notify_success = (message) =>{\r\n    toast.success(`${message}`, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n        autoClose: 4000})\r\n}\r\n\r\nexport const notify_error = (message) =>{\r\n    toast.error(`${message}`, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n        autoClose: 4000})\r\n}\r\n\r\nexport const notify_info = (message) =>{\r\n    toast.info(`${message}`, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n        autoClose: 4000})\r\n}","import history from \"../../history\";\r\n\r\nimport * as actionTypes from \"./type\"\r\nimport firebaseRefreshToken from \"../../api/firebaseRefreshToken\";\r\nimport {notify_success} from \"../../components/Notify\";\r\n\r\nexport const refreshToken = async () => {\r\n    console.info(\"called refresh token method\");\r\n    if (!localStorage.getItem(\"refreshToken\")){\r\n        history.push(\"/phone-login\");\r\n    }else {\r\n        const post_data = {grant_type: \"refresh_token\", \"refresh_token\": localStorage.getItem(\"refreshToken\")};\r\n        const response = await firebaseRefreshToken.post('', post_data);\r\n        if (response.status === 200) {\r\n            localStorage.setItem('refreshToken', response.data.refresh_token);\r\n            localStorage.setItem('idToken', response.data.id_token);\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport const userLoginWithPhone = () => (dispatch) => {\r\n    console.log(\"Entered into login action\")\r\n    dispatch({type: actionTypes.USER_LOG_IN});\r\n    notify_success(\"Login Success!\");\r\n    history.push(\"/\")\r\n};\r\n\r\nexport const userLogOutWithPhone = () => (dispatch) => {\r\n    if (localStorage.getItem(\"idToken\")){\r\n        notify_success(\"Logged out successfully!\");\r\n    }\r\n    dispatch({type: actionTypes.USER_LOG_OUT});\r\n};\r\n\r\n","import axios from 'axios';\r\n\r\n\r\nexport default axios.create({\r\n    baseURL: \"http://localhost:3001/\",\r\n\r\n})","import history from \"../../history\";\r\n\r\nimport * as actionTypes from \"./type\"\r\nimport streams from \"../../api/stream\";\r\nimport {notify_success} from \"../../components/Notify\";\r\n\r\nexport const createStream = formValues => async (dispatch, getState) => {\r\n    const response = await streams.post('/streams', {...formValues});\r\n    if (response.status === 201) {\r\n        notify_success(\"Stream Creation Succeed!\");\r\n    }\r\n    dispatch({type: actionTypes.CREATE_STREAM, payload: response.data});\r\n    history.push(\"/\");\r\n};\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n    const response = await streams.get('/streams');\r\n    dispatch({type: actionTypes.FETCH_STREAMS, payload: response.data});\r\n};\r\n\r\nexport const fetchStream = (id) => async dispatch => {\r\n    const response = await streams.get(`/streams/${id}`);\r\n    dispatch({type: actionTypes.FETCH_STREAM, payload: response.data});\r\n};\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n    const response = await streams.patch(`/streams/${id}`, formValues);\r\n    dispatch({type: actionTypes.EDIT_STREAM, payload: response.data});\r\n    notify_success(\"Updated Successfully!\")\r\n    history.push(\"/\");\r\n};\r\n\r\nexport const deleteStream = (id) => async dispatch => {\r\n    await streams.delete(`/streams/${id}`);\r\n    dispatch({type: actionTypes.DELETE_STREAM, payload: id});\r\n    history.push(\"/\");\r\n    notify_success(\"Stream has been deleted successfully!\")\r\n};","import React from 'react';\r\n\r\n\r\nconst Table = props => {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"content\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"card strpied-tabled-with-hover\">\r\n                                        <div className=\"card-header \">\r\n                                            <h4 className=\"card-title\">{props.title}</h4>\r\n                                            <p className=\"card-category\">{props.subtitle}</p>\r\n                                        </div>\r\n                                        <div className=\"card-body table-full-width table-responsive\">\r\n                                            <table className=\"table table-hover table-striped\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        {props.headers.map((header, index) => <th key={index}>{header}</th>)}\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {props.values}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <div className=\"spinner-border m-5 text-info\" style={{width: '4rem', height: '4rem'}} role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Spinner;","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\n\r\nclass DataTable extends React.Component{\r\n\r\n    renderContent = () =>{\r\n        const columns=[\r\n            { title: 'Section', field: 'section_name'},\r\n            { title: 'Machine', field: 'machine_name'},\r\n            { title: 'Status', field: 'status'},\r\n            { title: 'Date', field: 'date'},\r\n            { title: 'Start Time', field: 'start_at'},\r\n            { title: 'End Time', field: 'end_at'},\r\n            { title: 'Duration', field: 'duration'},\r\n        ];\r\n        if(this.props.isLoading){\r\n            return (\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <Spinner/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (this.props.data.records===undefined || this.props.data.records.length===0){\r\n            return <div className=\"text-center\">No Data Available</div>\r\n        }\r\n        // if (this.props.data.records===undefined && this.props.isSubmit){\r\n        //     return (\r\n        //         <div className=\"col-md-12\">\r\n        //             <div className=\"card\">\r\n        //                 <div className=\"card-body\">\r\n        //                     <Spinner/>\r\n        //                 </div>\r\n        //             </div>\r\n        //         </div>\r\n        //     )\r\n        // }\r\n        const data = this.props.data;\r\n        const title = `Total On Time: ${data.total_on_time} minutes, Total Off Time: ${data.total_off_time} minutes, Utilization: ${data.utilization}%`\r\n        return (\r\n            <MaterialTable\r\n                title={title}\r\n                columns={columns}\r\n                data={this.props.data.records}\r\n                options={{\r\n                    exportButton: true,\r\n                    exportAllData:true,\r\n                    paging: true,\r\n                    pageSize: 10,\r\n                    pageSizeOptions: [10, 20, 50, 100],\r\n                    paginationType: \"stepped\",\r\n                    // padding: 'dense',\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        {this.renderContent()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataTable;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport history from \"../../history\";\r\n\r\nimport {fetchStreams} from \"../../store/actions/stream\";\r\nimport Table from \"../../components/Table\";\r\nimport DataTable from \"../Machines/DataTable\";\r\n\r\nclass List extends React.Component{\r\n    // componentDidMount() {\r\n    //     this.props.fetchStreams();\r\n    // }\r\n\r\n    renderList(){\r\n\r\n        return  this.props.streams.map((stream, index) => {\r\n            return(\r\n                <tr key={index}>\r\n                    <td>{stream.id}</td>\r\n                    <td>{stream.title}</td>\r\n                    <td>{stream.description}</td>\r\n                    <td><Link to={`/streams/edit/${stream.id}`} className=\"btn btn-primary\">Edit</Link></td>\r\n                    <td><Link to={`/streams/delete/${stream.id}`} className=\"btn btn-danger\">Delete</Link></td>\r\n                </tr>\r\n            )\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if (! this.props.isAuthenticated){\r\n            return <Redirect to=\"/phone-login\" />;\r\n        }\r\n        // if (!this.props.streams){\r\n        //     return <div>Loading</div>\r\n        // }\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <DataTable/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {streams: Object.values(state.streams.results),\r\n            isAuthenticated: state.fbAuth.isUserAuthenticated};\r\n};\r\nexport default connect(mapStateToProps, {fetchStreams})(List);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\nclass ProjectForm extends React.Component{\r\n\r\n    renderError(meta){\r\n        if (meta.touched && meta.error){\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{meta.error}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderInput = ({input, label, type, meta}) => {\r\n        const className = `form-group ${meta.error && meta.touched ? \"has-error has-feedback\": \"has-feedback\"}`;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className={className}>\r\n                        <label>{label}</label>\r\n                        <input {...input} className=\"form-control\" type={type}/>\r\n                        {this.renderError(meta)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.onSubmit(formValues);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"card-title\">Edit Profile</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form\r\n                                    onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n                                >\r\n\r\n                                    <Field\r\n                                        name=\"title\"\r\n                                        component={this.renderInput}\r\n                                        label=\"Title\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                    <Field\r\n                                        name=\"description\"\r\n                                        component={this.renderInput}\r\n                                        label=\"Description\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                    <button\r\n                                        className=\"btn btn-info btn-fill pull-right\"\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Submit\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate =  (formValues) => {\r\n    const errors = {};\r\n    if(!formValues.title){\r\n        errors.title = 'You must entry a title';\r\n    }\r\n    if(!formValues.description){\r\n        errors.description = 'You must entry a description';\r\n    }\r\n    return errors\r\n};\r\n\r\nexport default reduxForm({\r\n    form: \"ProjectForm\",\r\n    validate: validate\r\n})(ProjectForm);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ProjectForm from \"./ProjectForm\";\r\nimport {createStream} from \"../../store/actions/stream\";\r\n\r\nclass Create extends React.Component{\r\n    onSubmit = (formValues) => {\r\n        this.props.createStream(formValues);\r\n    }\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <ProjectForm onSubmit={this.onSubmit}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {createStream})(Create);","import React from 'react';\r\nimport {connect } from 'react-redux';\r\nimport _ from 'lodash';\r\n\r\nimport {fetchStream, editStream} from \"../../store/actions/stream\";\r\nimport ProjectForm from \"./ProjectForm\";\r\n\r\nclass Edit extends React.Component{\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.editStream(this.props.match.params.id, formValues);\r\n    }\r\n\r\n    render() {\r\n        console.log(\"edit form.. stream: \", this.props.stream);\r\n        if (!this.props.stream){\r\n            return <div>Loading</div>\r\n        }\r\n        const initialValues = _.pick(this.props.stream, \"title\", \"description\");\r\n        console.log(\"initial values: \", initialValues);\r\n        return(\r\n            <ProjectForm\r\n                onSubmit={this.onSubmit}\r\n                // initialize the field which will be populated\r\n                initialValues = {_.pick(this.props.stream, \"title\", \"description\")}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    console.log(\"streams: \", state.streams.results, );\r\n    console.log(\"id: \", ownProps.match.params.id);\r\n    console.log(\"result: \", state.streams.results[ownProps.match.params.id]);\r\n    return {stream: state.streams.results[ownProps.match.params.id]}\r\n};\r\nexport default connect(mapStateToProps, {fetchStream, editStream})(Edit);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Modal} from 'react-bootstrap';\r\n\r\nimport {fetchStream, deleteStream} from \"../../store/actions/stream\";\r\n// import Modal from \"../../Modal/Modal\";\r\nimport history from \"../../history\";\r\n\r\nclass Delete extends React.Component{\r\n\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    onSubmit = () => {\r\n        console.log(\"stream: \", this.props.stream);\r\n        this.props.deleteStream(this.props.match.params.id);\r\n    }\r\n\r\n    renderActions () {\r\n        return (\r\n            <React.Fragment>\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={this.onSubmit}\r\n                >Delete</button>\r\n                <Link to=\"/\" className=\"btn btn-secondary\">Cancel</Link>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    renderContent() {\r\n        if(!this.props.stream){\r\n            return \"Are you sure you want to delete?\"\r\n        }\r\n        return `Are you sure you want to delete this title: ${this.props.stream.title}`\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={true} onHide={()=>history.push(\"/\")}>\r\n                <Modal.Header>Delete Stream</Modal.Header>\r\n                <Modal.Body>{this.renderContent()}</Modal.Body>\r\n                <Modal.Footer>{this.renderActions()}</Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    return {stream: state.streams.results[ownProps.match.params.id]}\r\n};\r\n\r\nexport default connect(mapStateToProps, {fetchStream, deleteStream})(Delete);","import React from 'react';\r\n\r\nclass Details extends React.Component{\r\n    render() {\r\n        return(\r\n            <div>Details Page</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Details;","import axios from 'axios';\r\n\r\n\r\nexport default axios.create({\r\n    baseURL: `${process.env.REACT_APP_MY_API_URL}/api/v1`,\r\n})","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport history from \"../history\";\r\n\r\nimport {userLogin} from \"../store/actions/auth\";\r\nimport styles from './LoginForm.module.css';\r\n\r\n\r\nclass LoginForm extends React.Component{\r\n\r\n    renderError(meta){\r\n        if (meta.touched && meta.error){\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{meta.error}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderInput = ({input, label, type, meta}) => {\r\n        const className = `form-group ${meta.error && meta.touched ? \"has-error has-feedback\": \"has-feedback\"}`;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className={className}>\r\n                        <label>{label}</label>\r\n                        <input {...input} className=\"form-control\" type={type}/>\r\n                        {this.renderError(meta)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.userLogin(formValues);\r\n    }\r\n\r\n    render() {\r\n        if (localStorage.getItem(\"token\")){\r\n            history.push(\"/\");\r\n        }\r\n        return (\r\n            <div className=\"container-fluid\" id={styles.custom_form}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 align-content-md-center\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"card-title\">User Login</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form\r\n                                    onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n                                >\r\n\r\n                                    <Field\r\n                                        name=\"username\"\r\n                                        component={this.renderInput}\r\n                                        label=\"Username\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                    <Field\r\n                                        name=\"password\"\r\n                                        component={this.renderInput}\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                    />\r\n                                    <button\r\n                                        className=\"btn btn-info btn-fill pull-right\"\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Submit\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate =  (formValues) => {\r\n    const errors = {};\r\n    if(!formValues.username){\r\n        errors.username = 'You must entry your username!';\r\n    }\r\n    if(!formValues.password){\r\n        errors.password = 'You must entry your password';\r\n    }\r\n    return errors\r\n};\r\n\r\n\r\n// export default reduxForm({\r\n//     form: \"LoginForm\",\r\n//     validate: validate\r\n// })(LoginForm);\r\nconst loginForm = reduxForm({\r\n    form: \"LoginForm\",\r\n    validate: validate\r\n})(LoginForm);\r\n\r\nexport default connect(null, {userLogin})(loginForm)","import history from \"../../history\";\r\n\r\nimport * as actionTypes from \"./type\"\r\nimport backend from \"../../api/backend\";\r\nimport {notify_error, notify_success} from \"../../components/Notify\";\r\n\r\nexport const userLogin = formValues => async (dispatch, getState) => {\r\n    try{\r\n        const response = await backend.post('/users/token/', {...formValues});\r\n        console.log(\"request: \", response.status);\r\n        if (response.status === 200) {\r\n            notify_success(\"Login Success!\");\r\n        }\r\n        dispatch({type: actionTypes.LOG_IN, payload: response.data});\r\n        history.push(\"/\");\r\n    }catch (e) {\r\n        notify_error(\"Credential Mismatched...! Try Again..!\")\r\n    }\r\n};\r\n\r\nexport const userLogOut = () => async (dispatch, getState) => {\r\n    if (localStorage.getItem(\"token\")){\r\n        notify_success(\"Logged out successfully!\")\r\n    }\r\n    dispatch({type: actionTypes.LOG_OUT});\r\n};\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {Modal} from 'react-bootstrap';\r\n\r\n// import {userLogOut} from \"../store/actions/auth\";\r\nimport {userLogOutWithPhone} from \"../store/actions/firebaseAuth\";\r\nimport history from \"../history\";\r\n\r\nclass Logout extends React.Component{\r\n\r\n    onSubmit = () => {\r\n        this.props.userLogOutWithPhone();\r\n        history.push(\"/\");\r\n    }\r\n\r\n    renderActions () {\r\n        return (\r\n            <React.Fragment>\r\n                <Link to=\"/\" className=\"btn btn-secondary\">Cancel</Link>\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={this.onSubmit}\r\n                >Logout</button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    renderContent() {\r\n        return `Are you sure you want to Logout?`\r\n\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isAuthenticated){\r\n            return <Redirect to=\"/phone-login\"/>;\r\n        }\r\n        return(\r\n            <Modal.Dialog >\r\n                <Modal.Header closeButton>Logout</Modal.Header>\r\n                <Modal.Body>{this.renderContent()}</Modal.Body>\r\n                <Modal.Footer>{this.renderActions()}</Modal.Footer>\r\n            </Modal.Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {isAuthenticated: state.fbAuth.isUserAuthenticated}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {userLogOutWithPhone})(Logout);","import React from 'react';\r\nimport {Link, Route, Switch} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\n\r\n// import {userLoginWithPhone, userLogOut} from \"../store/actions/auth\";\r\nimport {userLoginWithPhone, userLogOutWithPhone} from \"../store/actions/firebaseAuth\";\r\nimport List from \"../pages/Project/List\";\r\nimport Create from \"../pages/Project/Create\";\r\nimport Edit from \"../pages/Project/Edit\";\r\nimport Delete from \"../pages/Project/Delete\";\r\nimport Details from \"../pages/Project/Details\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport Logout from \"../components/Logout\";\r\n\r\nclass Nav extends React.Component {\r\n\r\n    state = {\r\n        isToggled: false\r\n    }\r\n\r\n    onToggleHandler = () => {\r\n        this.setState({\r\n            isToggled: !this.state.isToggled\r\n        });\r\n    }\r\n\r\n    renderLogin() {\r\n        if (this.props.isAuthenticated) {\r\n            return (\r\n                <Link className=\"nav-link\" to=\"/logout\">\r\n                    <span className=\"no-icon\">Log out</span>\r\n                </Link>\r\n            )\r\n        } else {\r\n            return (\r\n                <Link className=\"nav-link\" to=\"/phone-login\">\r\n                    <span className=\"no-icon\">Login</span>\r\n                </Link>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {isToggled} = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <nav className=\"navbar navbar-expand-lg \">\r\n                    <div className=\"container-fluid\">\r\n                        <Link className=\"navbar-brand\" to=\"/#\"> Dashboard </Link>\r\n                        <button\r\n                            onClick={this.onToggleHandler}\r\n                            className={'navbar-toggler navbar-toggler-right' + (isToggled ? ' toggled' : '')}\r\n                            type=\"button\" data-toggle=\"collapse\"\r\n                            aria-controls=\"navigation-index\"\r\n                            aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\"\r\n                        >\r\n                            <span className=\"navbar-toggler-bar burger-lines\"/>\r\n                            <span className=\"navbar-toggler-bar burger-lines\"/>\r\n                            <span className=\"navbar-toggler-bar burger-lines\"/>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse justify-content-end\" id=\"navigation\">\r\n                            {/*<ul className=\"nav navbar-nav mr-auto\">*/}\r\n                            {/*    <li className=\"nav-item\">*/}\r\n                            {/*        <Link to=\"/#\" className=\"nav-link\" data-toggle=\"dropdown\">*/}\r\n                            {/*            <i className=\"nc-icon nc-palette\"/>*/}\r\n                            {/*            <span className=\"d-lg-none\">Dashboard</span>*/}\r\n                            {/*        </Link>*/}\r\n                            {/*    </li>*/}\r\n                            {/*    <li className=\"dropdown nav-item\">*/}\r\n                            {/*        <Link to=\"/#\" className=\"dropdown-toggle nav-link\" data-toggle=\"dropdown\">*/}\r\n                            {/*            <i className=\"nc-icon nc-planet\"/>*/}\r\n                            {/*            <span className=\"notification\">5</span>*/}\r\n                            {/*            <span className=\"d-lg-none\">Notification</span>*/}\r\n                            {/*        </Link>*/}\r\n                            {/*        <ul className=\"dropdown-menu\">*/}\r\n                            {/*            <Link className=\"dropdown-item\" to=\"/#\">Notification 1</Link>*/}\r\n                            {/*            <Link className=\"dropdown-item\" to=\"/#\">Notification 2</Link>*/}\r\n                            {/*            <Link className=\"dropdown-item\" to=\"/#\">Notification 3</Link>*/}\r\n                            {/*            <Link className=\"dropdown-item\" to=\"/#\">Notification 4</Link>*/}\r\n                            {/*            <Link className=\"dropdown-item\" to=\"/#\">Another notification</Link>*/}\r\n                            {/*        </ul>*/}\r\n                            {/*    </li>*/}\r\n                            {/*    <li className=\"nav-item\">*/}\r\n                            {/*        <Link to=\"/#\" className=\"nav-link\">*/}\r\n                            {/*            <i className=\"nc-icon nc-zoom-split\"/>*/}\r\n                            {/*            <span className=\"d-lg-block\">&nbsp;Search</span>*/}\r\n                            {/*        </Link>*/}\r\n                            {/*    </li>*/}\r\n                            {/*</ul>*/}\r\n                            <ul className=\"navbar-nav ml-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/shafik\">\r\n                                        {this.props.isUserAuthenticated ?\r\n                                            <span className=\"no-icon\">Account</span> :\r\n                                            <span className=\"no-icon\">{localStorage.getItem('name')}</span>}\r\n                                    </Link>\r\n                                </li>\r\n                                {/*<li className=\"nav-item dropdown\">*/}\r\n                                {/*    <Link className=\"nav-link dropdown-toggle\" to=\"/#\"*/}\r\n                                {/*       id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\"*/}\r\n                                {/*       aria-expanded=\"false\">*/}\r\n                                {/*        <span className=\"no-icon\">Dropdown</span>*/}\r\n                                {/*    </Link>*/}\r\n                                {/*    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">*/}\r\n                                {/*        <Link className=\"dropdown-item\" to=\"/#\">Action</Link>*/}\r\n                                {/*        <Link className=\"dropdown-item\" to=\"/#\">Another action</Link>*/}\r\n                                {/*        <Link className=\"dropdown-item\" to=\"/#\">Something</Link>*/}\r\n                                {/*        <Link className=\"dropdown-item\" to=\"/#\">Something else here</Link>*/}\r\n                                {/*        <div className=\"divider\"/>*/}\r\n                                {/*        <Link className=\"dropdown-item\" to=\"/#\">Separated link</Link>*/}\r\n                                {/*    </div>*/}\r\n                                {/*</li>*/}\r\n                                <li className=\"nav-item\">\r\n                                    {this.renderLogin()}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {isAuthenticated: state.fbAuth.isUserAuthenticated}\r\n}\r\n\r\nexport default connect(mapStateToProps, {userLoginWithPhone, userLogOutWithPhone})(Nav);","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass SideBar extends React.Component{\r\n    renderSideBarMenu(){\r\n        if(!this.props.isAuthenticated){\r\n            return null;\r\n        }\r\n        return(\r\n            <ul className=\"nav\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/#\" onClick={ (e) => e.preventDefault() }>\r\n                        <i className=\"nc-icon nc-chart-pie-35\"/>\r\n                        <p>Dashboard</p>\r\n                    </Link>\r\n                </li>\r\n                {localStorage.getItem('group') && localStorage.getItem('group') === 'DEV-ADMIN' ?\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/users\">\r\n                            <i className=\"nc-icon nc-circle-09\"/>\r\n                            <p>Users Management</p>\r\n                        </Link>\r\n                    </li>\r\n                    : null\r\n                }\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/machines/data\">\r\n                        <i className=\"nc-icon nc-notes\"/>\r\n                        <p>Data</p>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"sidebar\" data-color=\"grey\">\r\n                <div className=\"sidebar-wrapper\">\r\n                    <div className=\"logo\">\r\n                        <Link to=\"/#\" className=\"simple-text\">\r\n                            HTEC\r\n                        </Link>\r\n                    </div>\r\n                    {this.renderSideBarMenu()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {isAuthenticated: state.fbAuth.isUserAuthenticated}\r\n}\r\n\r\nexport default connect(mapStateToProps)(SideBar);","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Footer extends React.Component{\r\n    render() {\r\n        return (\r\n            <footer className=\"footer\">\r\n                <div className=\"container-fluid\">\r\n                    <nav>\r\n                        <ul className=\"footer-menu\">\r\n                            <li>\r\n                                <a href=\"/#\">\r\n                                    Home\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">\r\n                                    Company\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">\r\n                                    Portfolio\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">\r\n                                    Blog\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                        <p className=\"copyright text-center\">\r\n                            ©\r\n                            <script>\r\n                                document.write(new Date().getFullYear())\r\n                            </script>\r\n                            <a href=\"https://www.linkedin.com/in/shafikte/\" target=\"_blank\" rel=\"noopener noreferrer\">MSI Shafik</a>, made with love for a better web\r\n                        </p>\r\n                    </nav>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import firebase from \"firebase\";\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBx8sGQIsXKs4Ea6gAAC7BPkr8yFO6LZ_U\",\r\n    authDomain: \"machine-status-dev.firebaseapp.com\",\r\n    projectId: \"machine-status-dev\",\r\n    storageBucket: \"machine-status-dev.appspot.com\",\r\n    messagingSenderId: \"775493256846\",\r\n    appId: \"1:775493256846:web:07c0ec9bba3eb29ef2abdf\",\r\n    measurementId: \"G-L3EJ9VVW5S\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;","import axios from 'axios';\r\n\r\n\r\nexport default axios.create({\r\n    baseURL: `${process.env.REACT_APP_MACHINE_STATUS_MANAGEMENT}`\r\n})","import machineStatusManagement from \"./api/machineStatusManagement\";\r\n\r\nexport const checkUser = async (phone_number) =>{\r\n        const response = await machineStatusManagement.post('/users/checking/', {username:phone_number});\r\n        if (response.status === 200){\r\n            console.log(\"data: \", response.data);\r\n            return response.data;\r\n        }\r\n        return {is_exists: false}\r\n}","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\nimport history from \"../history\";\r\n// import {userLogin} from \"../store/actions/auth\";\r\nimport {userLoginWithPhone} from \"../store/actions/firebaseAuth\";\r\nimport styles from './LoginForm.module.css';\r\nimport firebase from \"../firebaseConfig\";\r\nimport {notify_info, notify_error} from \"./Notify\";\r\nimport {checkUser} from \"../helper\";\r\n\r\n\r\nclass FirebaseLoginForm extends React.Component{\r\n\r\n    state = {\r\n        has_submit: false,\r\n        has_success: false,\r\n        has_otp_submit: true\r\n    }\r\n\r\n    renderError(meta){\r\n        if (meta.touched && meta.error){\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{meta.error}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderInput = ({input, label, type, meta}) => {\r\n        const className = `form-group ${meta.error && meta.touched ? \"has-error has-feedback\": \"has-feedback\"}`;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className={className}>\r\n                        <label>{label}</label>\r\n                        <input {...input} className=\"form-control\" type={type}/>\r\n                        {this.renderError(meta)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderButton = (buttonText) => {\r\n        if (!this.state.has_submit || !this.state.has_otp_submit){\r\n            return (<button\r\n                className=\"btn btn-info btn-fill pull-right\"\r\n                type=\"submit\"\r\n            >\r\n                {buttonText}\r\n            </button>)\r\n        }\r\n        return (\r\n            <button\r\n                className=\"btn btn-info btn-fill pull-right\"\r\n                disabled\r\n            >\r\n                <Spinner\r\n                    as=\"span\"\r\n                    animation=\"grow\"\r\n                    size=\"sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                />\r\n                Verifying....\r\n            </button>\r\n        )\r\n    }\r\n\r\n    renderContent = () =>{\r\n        if (!this.state.has_success){\r\n            return (\r\n                <form\r\n                    onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n                >\r\n                    <div id=\"recaptcha-container\"></div>\r\n\r\n                    <Field\r\n                        name=\"username\"\r\n                        component={this.renderInput}\r\n                        label=\"Phone Number\"\r\n                        type=\"text\"\r\n                    />\r\n                    {this.renderButton(\"Verify\")}\r\n                </form>\r\n            )\r\n        }\r\n        return (\r\n            <form\r\n                onSubmit={this.props.handleSubmit(this.onOTPSubmit)}\r\n            >\r\n\r\n                <Field\r\n                    name=\"otp\"\r\n                    component={this.renderInput}\r\n                    label=\"OTP\"\r\n                    type=\"number\"\r\n                />\r\n                {this.renderButton(\"Submit\")}\r\n            </form>\r\n        )\r\n    }\r\n\r\n    settUpRecaptcha = () => {\r\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n            \"recaptcha-container\",\r\n            {\r\n                size: \"invisible\",\r\n                callback: function (response) {\r\n                    console.log(\"Captcha Resolved\");\r\n                },\r\n                defaultCountry: \"BD\",\r\n            }\r\n        );\r\n    };\r\n\r\n    onSubmit = (formValues) => {\r\n        this.setState({has_submit:true});\r\n        const phoneNumber = \"+88\" + formValues.username;\r\n        const userStatus = checkUser(phoneNumber);\r\n        userStatus.then((result)=> {\r\n            if (!result.is_exists){\r\n                notify_error(\"User Doesn't Exists!\");\r\n                this.setState({has_submit:false});\r\n                return null;\r\n            }\r\n            localStorage.setItem('name', result.name);\r\n            localStorage.setItem('group', result.group);\r\n            this.settUpRecaptcha();\r\n            const appVerifier = window.recaptchaVerifier;\r\n            firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\r\n                .then((confirmationResult) => {\r\n                    console.log(\"message has been sent!\");\r\n                    window.confirmationResult = confirmationResult;\r\n                    // history.push('/otp/');\r\n                    notify_info(\"OTP has been sent!\");\r\n                    this.setState({has_success:true, has_otp_submit: false})\r\n                }).catch((error) => {\r\n                notify_error(\"Error! Try again.\");\r\n            });\r\n\r\n        })\r\n            .catch((error)=>{\r\n                notify_error(\"Network Error!\");\r\n                console.log(\"Error: \", error);\r\n            })\r\n\r\n    }\r\n\r\n    onOTPSubmit = (formValues) => {\r\n        this.setState({has_submit:true, has_otp_submit: true})\r\n        console.log(\"submitted OTP: \", formValues.otp);\r\n        let code = formValues.otp;\r\n        const confirmationResult = window.confirmationResult;\r\n        confirmationResult.confirm(code).then((result) => {\r\n            // User signed in successfully.\r\n            const user = result.user;\r\n            localStorage.setItem('refreshToken', user.refreshToken);\r\n            user.getIdToken()\r\n                .then(function(idToken) {\r\n                    localStorage.setItem('idToken', idToken);\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(\"token error: \", error);\r\n                    notify_error(\"Error! Try again.\");\r\n                });\r\n            this.props.userLoginWithPhone();\r\n        }).catch((error) => {\r\n            this.setState({has_otp_submit: false});\r\n            console.log(\"submition error: \", error);\r\n            notify_error(\"Error! Try again.\");\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated){\r\n            history.push(\"/\");\r\n        }\r\n        return (\r\n            <div className=\"container-fluid\" id={styles.custom_form}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 align-content-md-center\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"card-title\">User Login with Phone Number</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                {this.renderContent()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate =  (formValues) => {\r\n    const errors = {};\r\n    if(!formValues.username){\r\n        errors.username = 'You must entry your username!';\r\n    }\r\n    if(formValues.username && formValues.username.length !== 11){\r\n        errors.username = 'You must entry 11 digit phone number!';\r\n    }\r\n    return errors\r\n};\r\n\r\nconst mapSateToProps = (state) => {\r\n    return {isAuthenticated: state.fbAuth.isUserAuthenticated}\r\n}\r\n\r\n\r\n// export default reduxForm({\r\n//     form: \"LoginForm\",\r\n//     validate: validate\r\n// })(LoginForm);\r\nconst firebaseLoginForm = reduxForm({\r\n    form: \"FLoginForm\",\r\n    validate: validate\r\n})(FirebaseLoginForm);\r\n\r\nexport default connect(mapSateToProps, {userLoginWithPhone})(firebaseLoginForm)","import history from \"../../history\";\r\n\r\nimport * as actionTypes from \"./type\"\r\nimport streams from \"../../api/stream\";\r\nimport machineStatusManagement from \"../../api/machineStatusManagement\";\r\nimport {notify_error, notify_success} from \"../../components/Notify\";\r\nimport {refreshToken} from \"./firebaseAuth\";\r\n\r\n\r\nexport const getUserGroup = () => async (dispatch, getState) => {\r\n    try{\r\n        const response = await machineStatusManagement.get('/users/groups', {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        dispatch({type: actionTypes.USER_GROUPS, payload: response.data});\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                const response = await machineStatusManagement.get('/users/groups', {\r\n                    headers: {\r\n                        'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                    },\r\n                });\r\n                dispatch({type: actionTypes.USER_GROUPS, payload: response.data});\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const createUser = formValues => async (dispatch, getState) => {\r\n    try{\r\n        const response = await machineStatusManagement.post('/users/', {...formValues}, {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            }\r\n        });\r\n        if (response.status === 201) {\r\n            notify_success(\"Stream Creation Succeed!\");\r\n        }\r\n        dispatch({type: actionTypes.CREATE_USER, payload: response.data});\r\n        history.push(\"/users\");\r\n        window.location.reload();\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                    const response = await machineStatusManagement.post('/users/', {...formValues}, {\r\n                        headers: {\r\n                            'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                        }\r\n                    });\r\n                    if (response.status === 201) {\r\n                        notify_success(\"Stream Creation Succeed!\");\r\n                    }\r\n                    dispatch({type: actionTypes.CREATE_USER, payload: response.data});\r\n                    history.push(\"/users\");\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n        notify_error(\"Error Creating New User!\");\r\n\r\n    }\r\n};\r\n\r\nexport const fetchUsers = () => async (dispatch, getState) => {\r\n    try{\r\n        let response = await machineStatusManagement.get('/users', {\r\n            headers: {\r\n                'Authorization': 'jwt ' + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        dispatch({type: actionTypes.FETCH_USERS, payload: response.data});\r\n    }catch (e) {\r\n            if (e.response && e.response.status===401) {\r\n                refreshToken().then(async function () {\r\n                    const response = await machineStatusManagement.get('/users', {\r\n                        headers: {\r\n                            'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                        },\r\n                    });\r\n                    dispatch({type: actionTypes.FETCH_USERS, payload: response.data});\r\n                    }\r\n                ).catch(function (e) {\r\n                    notify_error(\"Network Error!\");\r\n                })\r\n            }\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const fetchUser = (id) => async (dispatch, getState) => {\r\n    try{\r\n        const response = await machineStatusManagement.get(`/users/${id}/`, {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        dispatch({type: actionTypes.FETCH_USER, payload: response.data});\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                const response = await machineStatusManagement.get(`/users/${id}/`, {\r\n                    headers: {\r\n                        'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                    },\r\n                });\r\n                dispatch({type: actionTypes.FETCH_USER, payload: response.data});\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport const editUser = (id, formValues) => async dispatch => {\r\n    try{\r\n        const response = await machineStatusManagement.patch(`/users/${id}/`, formValues, {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        dispatch({type: actionTypes.EDIT_USER, payload: response.data});\r\n        notify_success(\"Updated Successfully!\")\r\n        history.push(\"/users\");\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                const response = await machineStatusManagement.patch(`/users/${id}`, formValues, {\r\n                    headers: {\r\n                        'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                    },\r\n                });\r\n                dispatch({type: actionTypes.EDIT_USER, payload: response.data});\r\n                notify_success(\"Updated Successfully!\")\r\n                history.push(\"/\");\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const blockUnblockUser = (id, isBlocked) => async dispatch => {\r\n    try{\r\n        const formValues = {is_blocked: isBlocked}\r\n        await machineStatusManagement.patch(`/users/${id}/`, formValues, {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        dispatch({type: actionTypes.BLOCK_UNBLOCK_USER});\r\n        notify_success(\"Action Successful!\");\r\n        history.push(\"/users\");\r\n        // window.location.reload();\r\n\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                const formValues = {is_blocked: isBlocked}\r\n                await machineStatusManagement.patch(`/users/${id}/`, formValues, {\r\n                    headers: {\r\n                        'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                    },\r\n                });\r\n                dispatch({type: actionTypes.BLOCK_UNBLOCK_USER});\r\n                notify_success(\"Action Successful!\");\r\n                history.push(\"/users\");\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const deleteUser = id => async dispatch => {\r\n    try{\r\n        const formValues = {is_active: false}\r\n        await machineStatusManagement.patch(`/users/${id}/`, formValues, {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        dispatch({type: actionTypes.DELETE_USER, payload: id});\r\n        notify_success(\"User Deletion Successful!\");\r\n        history.push(\"/users\");\r\n\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                const formValues = {is_active: false}\r\n                await machineStatusManagement.patch(`/users/${id}/`, formValues, {\r\n                    headers: {\r\n                        'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                    },\r\n                });\r\n                dispatch({type: actionTypes.DELETE_USER, payload: id});\r\n                notify_success(\"User Deletion Successful!\");\r\n                history.push(\"/users\");\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nimport {fetchUsers} from \"../../store/actions/user\";\r\nimport Table from \"../../components/Table\";\r\n\r\nclass UsersList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchUsers();\r\n    }\r\n\r\n    renderList() {\r\n\r\n        return this.props.users.map((user, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <td>{user.employee_id}</td>\r\n                    <td>{user.name}</td>\r\n                    <td>{user.username}</td>\r\n                    <td>{user.group_name}</td>\r\n                    <td>{user.section_name}</td>\r\n                    <td>{user.is_blocked ? \"Blocked\" : \"Active\"}</td>\r\n                    <td><Link to={`/users/edit/${user.id}`} className=\"btn btn-primary\">Edit</Link></td>\r\n                    <td>\r\n                        <Link to={`/users/block-unblock/${user.id}`}\r\n                              className=\"btn btn-warning\">{user.is_blocked ? \"Unblock\" : \"Block\"}\r\n                        </Link>\r\n                    </td>\r\n                    <td><Link to={`/users/delete/${user.id}`} className=\"btn btn-danger\">Delete</Link></td>\r\n                </tr>\r\n            )\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if (!this.props.isAuthenticated) {\r\n            return <Redirect to=\"/phone-login\"/>;\r\n        }\r\n        if (!this.props.users) {\r\n            return <Spinner/>\r\n\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Table\r\n                    title=\"User Lists\"\r\n                    subtitle=\"Lists of active and blocked users\"\r\n                    headers={[\"Employee Id\", \"Name\", \"Phone\", \"Permission\", \"Section\",\r\n                        \"Status\", \"Update\", \"Action\", \"Action\"]}\r\n                    values={this.renderList()}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.users.results,\r\n        isAuthenticated: state.fbAuth.isUserAuthenticated\r\n    };\r\n};\r\nexport default connect(mapStateToProps, {fetchUsers})(UsersList);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\nclass UserForm extends React.Component{\r\n\r\n    renderError(meta){\r\n        if (meta.touched && meta.error){\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{meta.error}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    renderUserGroup = ({input, label, meta}) =>{\r\n        const className = `form-group ${meta.error && meta.touched ? \"has-error has-feedback\": \"has-feedback\"}`;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className={className}>\r\n                        <label>{label}</label>\r\n                        <select {...input} className=\"form-control\">\r\n                            <option disabled value=\"\"> -- select an option -- </option>\r\n                            {this.props.groups.map(item => <option key={item.id} value={item.id}>{item.name}</option>)}\r\n                        </select>\r\n                        {this.renderError(meta)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderSection = ({input, label, meta}) =>{\r\n        const className = `form-group ${meta.error && meta.touched ? \"has-error has-feedback\": \"has-feedback\"}`;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className={className}>\r\n                        <label>{label}</label>\r\n                        <select {...input} className=\"form-control\">\r\n                            <option disabled value=\"\"> -- select an option -- </option>\r\n                            {this.props.sections.map(item => <option key={item.id} value={item.id}>{item.name}</option>)}\r\n                        </select>\r\n                        {this.renderError(meta)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderInput = ({input, label, type, meta}) => {\r\n        const className = `form-group ${meta.error && meta.touched ? \"has-error has-feedback\": \"has-feedback\"}`;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className={className}>\r\n                        <label>{label}</label>\r\n                        {this.props.is_update && label===\"Phone\"?\r\n                            <input {...input} className=\"form-control\" type={type} disabled/>\r\n                            : <input {...input} className=\"form-control\" type={type} />}\r\n                        {/*<input {...input} className=\"form-control\" type={type} disabled/>*/}\r\n                        {this.renderError(meta)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.onSubmit(formValues);\r\n        console.log(\"form values: \", formValues);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"card-title\">Edit Profile</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form\r\n                                    onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n                                >\r\n\r\n                                    <Field\r\n                                        name=\"username\"\r\n                                        component={this.renderInput}\r\n                                        label=\"Phone\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                    <Field\r\n                                        name=\"name\"\r\n                                        component={this.renderInput}\r\n                                        label=\"Name\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                    <Field\r\n                                        name=\"employee_id\"\r\n                                        component={this.renderInput}\r\n                                        label=\"Employee ID\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                    <Field\r\n                                        name=\"user_group\"\r\n                                        component={this.renderUserGroup}\r\n                                        label=\"Permission\"\r\n                                        type=\"select\"\r\n                                    />\r\n                                    <Field\r\n                                        name=\"section\"\r\n                                        component={this.renderSection}\r\n                                        label=\"Section\"\r\n                                        type=\"select\"\r\n                                    />\r\n                                    <button\r\n                                        className=\"btn btn-info btn-fill pull-right\"\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Submit\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate =  (formValues) => {\r\n    const errors = {};\r\n    if(!formValues.username){\r\n        errors.username = 'You must entry a phone number';\r\n    }\r\n    if(!formValues.name){\r\n        errors.name = 'You must entry a name';\r\n    }\r\n    if(!formValues.employee_id){\r\n        errors.employee_id = 'You must entry a employee id';\r\n    }\r\n    if(!formValues.user_group){\r\n        errors.user_group = 'You must select user permission group';\r\n    }\r\n    if(!formValues.section){\r\n        errors.section = 'You must select user section';\r\n    }\r\n    return errors\r\n};\r\n\r\nexport default reduxForm({\r\n    form: \"UserForm\",\r\n    validate: validate\r\n})(UserForm);\r\n","import history from \"../../history\";\r\n\r\nimport * as actionTypes from \"./type\"\r\nimport machineStatusManagement from \"../../api/machineStatusManagement\";\r\nimport {refreshToken} from \"./firebaseAuth\";\r\nimport {notify_error} from \"../../components/Notify\";\r\n\r\n\r\nexport const getSections = () => async dispatch => {\r\n    try{\r\n        const response = await machineStatusManagement.get('/company/sections', {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        console.log(\"section result: \", response.data);\r\n        dispatch({type: actionTypes.FETCH_SECTIONS, payload: response.data});\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                const response = await machineStatusManagement.get('/company/sections', {\r\n                    headers: {\r\n                        'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                    },\r\n                });\r\n                dispatch({type: actionTypes.FETCH_SECTIONS, payload: response.data});\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const getMachines = () => async dispatch => {\r\n    try{\r\n        const response = await machineStatusManagement.get('/company/machines', {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        dispatch({type: actionTypes.FETCH_MACHINES, payload: response.data});\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                const response = await machineStatusManagement.get('/company/machines', {\r\n                    headers: {\r\n                        'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                    },\r\n                });\r\n                dispatch({type: actionTypes.FETCH_MACHINES, payload: response.data});\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport UserForm from \"./UserForm\";\r\nimport {createUser, getUserGroup} from \"../../store/actions/user\";\r\nimport {getSections} from \"../../store/actions/company\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nclass Create extends React.Component{\r\n    componentDidMount() {\r\n        this.props.getUserGroup();\r\n        this.props.getSections();\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.createUser(formValues);\r\n    }\r\n    render() {\r\n        if (!this.props.groups || !this.props.sections){\r\n            return <Spinner/>\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                <UserForm\r\n                    onSubmit={this.onSubmit}\r\n                    groups = {this.props.groups}\r\n                    sections = {this.props.sections}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {groups: state.users.groups, sections: state.company.sections}\r\n}\r\n\r\nexport default connect(mapStateToProps, {createUser, getUserGroup, getSections})(Create);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {Tabs, Tab} from \"react-bootstrap\";\r\nimport history from \"../../history\";\r\n\r\nimport {fetchStreams} from \"../../store/actions/stream\";\r\nimport Table from \"../../components/Table\";\r\nimport UsersList from \"./UsersList\";\r\nimport CreateUser from \"./CreateUser\";\r\n\r\nclass UserDashboard extends React.Component{\r\n\r\n    render() {\r\n        if (! this.props.isAuthenticated){\r\n            return <Redirect to=\"/phone-login\" />;\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <Tabs defaultActiveKey=\"users\">\r\n                    <Tab eventKey=\"users\" title=\"Users List\">\r\n                        <UsersList/>\r\n                    </Tab>\r\n                    <Tab eventKey=\"create\" title=\"Create New User\">\r\n                        <CreateUser/>\r\n                    </Tab>\r\n                </Tabs>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {isAuthenticated: state.fbAuth.isUserAuthenticated};\r\n};\r\nexport default connect(mapStateToProps)(UserDashboard);","import React from 'react';\r\nimport {connect } from 'react-redux';\r\nimport _ from 'lodash';\r\n\r\nimport {fetchUser, editUser, getUserGroup} from \"../../store/actions/user\";\r\nimport {getSections} from \"../../store/actions/company\";\r\nimport UserForm from \"./UserForm\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nclass UpdateUser extends React.Component{\r\n    componentDidMount() {\r\n        this.props.fetchUser(this.props.match.params.id);\r\n        this.props.getUserGroup();\r\n        this.props.getSections();\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.editUser(this.props.match.params.id, formValues);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.user || !this.props.groups || !this.props.sections){\r\n            return <Spinner/>\r\n        }\r\n        const initValue = _.pick(this.props.user, \"username\", \"name\", \"employee_id\")\r\n        return(\r\n            <UserForm\r\n                onSubmit={this.onSubmit}\r\n                // initialize the field which will be populated\r\n                initialValues = {initValue}\r\n                groups={this.props.groups}\r\n                sections={this.props.sections}\r\n                is_update={true}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {user: state.users.user, groups:state.users.groups, sections:state.company.sections}\r\n};\r\nexport default connect(mapStateToProps, {fetchUser, editUser, getUserGroup, getSections})(UpdateUser);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Modal} from 'react-bootstrap';\r\n\r\nimport {fetchUser, blockUnblockUser} from \"../../store/actions/user\";\r\nimport history from \"../../history\";\r\n\r\nclass BlockUser extends React.Component{\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUser(this.props.match.params.id);\r\n    }\r\n\r\n    onSubmit = (isBlocked) => {\r\n        this.props.blockUnblockUser(this.props.match.params.id, isBlocked);\r\n    }\r\n\r\n    renderActions () {\r\n        return (\r\n            <React.Fragment>\r\n                <Link to=\"/users\" className=\"btn btn-secondary\">Cancel</Link>\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={()=>this.onSubmit(true)}\r\n                >Block</button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    renderUnblockActions () {\r\n        return (\r\n            <React.Fragment>\r\n                <Link to=\"/users\" className=\"btn btn-secondary\">Cancel</Link>\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={()=>this.onSubmit(false)}\r\n                >Unblock</button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    renderContent() {\r\n        if(!this.props.user){\r\n            return \"Are you sure you want to block?\"\r\n        }\r\n        return `Are you sure you want to block : ${this.props.user.name}`\r\n    }\r\n    renderUnblockContent() {\r\n        if(!this.props.user){\r\n            return \"Are you sure you want to Unblock?\"\r\n        }\r\n        return `Are you sure you want to Unblock: ${this.props.user.name}`\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.user){\r\n            return null;\r\n        }\r\n        if(this.props.user.is_blocked){\r\n            return (\r\n                <Modal show={true} onHide={()=>history.push(\"/users\")}>\r\n                    <Modal.Header>Unblock User</Modal.Header>\r\n                    <Modal.Body>{this.renderUnblockContent()}</Modal.Body>\r\n                    <Modal.Footer>{this.renderUnblockActions()}</Modal.Footer>\r\n                </Modal>\r\n            )\r\n        }\r\n        return(\r\n            <Modal show={true} onHide={()=>history.push(\"/users\")}>\r\n                <Modal.Header>Block User</Modal.Header>\r\n                <Modal.Body>{this.renderContent()}</Modal.Body>\r\n                <Modal.Footer>{this.renderActions()}</Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    return {user: state.users.user}\r\n};\r\n\r\nexport default connect(mapStateToProps, {fetchUser, blockUnblockUser})(BlockUser);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Modal} from 'react-bootstrap';\r\n\r\nimport {fetchUser, deleteUser} from \"../../store/actions/user\";\r\nimport history from \"../../history\";\r\n\r\nclass DeleteUser extends React.Component{\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUser(this.props.match.params.id);\r\n    }\r\n\r\n    onSubmit = () => {\r\n        this.props.deleteUser(this.props.match.params.id);\r\n    }\r\n\r\n    renderActions () {\r\n        return (\r\n            <React.Fragment>\r\n                <Link to=\"/users\" className=\"btn btn-secondary\">Cancel</Link>\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={this.onSubmit}\r\n                >Delete</button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    renderContent() {\r\n        if(!this.props.user){\r\n            return \"Are you sure you want to delete?\"\r\n        }\r\n        return `Are you sure you want to delete : ${this.props.user.name}`\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={true} onHide={()=>history.push(\"/users\")}>\r\n                <Modal.Header>Delete User</Modal.Header>\r\n                <Modal.Body>{this.renderContent()}</Modal.Body>\r\n                <Modal.Footer>{this.renderActions()}</Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    return {user: state.users.user}\r\n};\r\n\r\nexport default connect(mapStateToProps, {fetchUser, deleteUser})(DeleteUser);","import * as actionTypes from \"./type\"\r\nimport machineStatusManagement from \"../../api/machineStatusManagement\";\r\nimport {refreshToken} from \"./firebaseAuth\";\r\nimport {notify_error} from \"../../components/Notify\";\r\n\r\n\r\nexport const getLiveStatus = () => async dispatch => {\r\n    try{\r\n        const response = await machineStatusManagement.get('/machine/status', {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        dispatch({type: actionTypes.LIVE_STATUS, payload: response.data});\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                    const response = await machineStatusManagement.get('/machine/status', {\r\n                        headers: {\r\n                            'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                        },\r\n                    });\r\n                    dispatch({type: actionTypes.LIVE_STATUS, payload: response.data});\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const getFilteredData = (params) => async dispatch => {\r\n    try{\r\n        dispatch({type: actionTypes.IS_FETCHING});\r\n        const response = await machineStatusManagement.get('/machine/status/data?' + params, {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        dispatch({type: actionTypes.FILTERED_DATA, payload: response.data});\r\n        dispatch({type: actionTypes.IS_FETCHED});\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                    const response = await machineStatusManagement.get('/machine/status/data?' + params, {\r\n                        headers: {\r\n                            'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                        },\r\n                    });\r\n                    dispatch({type: actionTypes.FILTERED_DATA, payload: response.data});\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n};","// src/components/basic.table.js\r\nimport React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\n\r\nimport {getLiveStatus} from \"../../store/actions/machineStatus\";\r\n\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\n\r\nclass MachineStatusTable extends React.Component{\r\n\r\n    componentDidMount() {\r\n        this.props.getLiveStatus();\r\n        this.interval = setInterval(this.props.getLiveStatus, 60000);\r\n    }\r\n    componentWillUnmount() {\r\n        // Clear the interval right before component unmount\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    renderStatus = (rowData) => {\r\n        if (rowData.status===\"on\"){\r\n            return (\r\n                <span>\r\n                    <i className=\"fas fa-circle\" style={{color:\"green\", paddingRight: \"5px\"}}/>\r\n                    On\r\n                </span>\r\n            )\r\n            // return (<button type=\"button\" className=\"btn btn-success\">{rowData.status}</button>)\r\n        }\r\n        return(\r\n            <span>\r\n                <i className=\"fas fa-circle\" style={{color:\"red\", paddingRight: \"5px\"}}/>\r\n                Off\r\n            </span>\r\n        )\r\n    }\r\n\r\n    renderNetworkStatus = (rowData) => {\r\n        if (rowData.network_status===\"working\"){\r\n            return (\r\n                <span>\r\n                    <i className=\"fas fa-circle\" style={{color:\"green\", paddingRight: \"5px\"}}/>\r\n                    Good\r\n                </span>\r\n            )\r\n        }\r\n        return(\r\n            <span>\r\n                <i className=\"fas fa-circle\" style={{color:\"red\", paddingRight: \"5px\"}}/>\r\n                Issue\r\n            </span>\r\n        )\r\n    }\r\n\r\n    renderContent = () =>{\r\n        const columns=[\r\n            { title: 'Section', field: 'section_name'},\r\n            { title: 'Machine', field: 'machine_name'},\r\n            { title: 'Status', field: 'status', render: rowData => this.renderStatus(rowData)},\r\n            { title: 'Last Update', field: 'last_update'},\r\n            { title: 'Network', field: 'network_status', render: rowData => this.renderNetworkStatus(rowData)},\r\n        ];\r\n        if (this.props.data===undefined || this.props.data.length===0 ){\r\n            return <Spinner/>\r\n        }\r\n        return (\r\n            <MaterialTable\r\n                title=\"Live Machine Status\"\r\n                columns={columns}\r\n                data={this.props.data}\r\n                options={{\r\n                    exportButton: true,\r\n                    paging: true,\r\n                    // pageSize: 10,\r\n                    // pageSizeOptions: [10, 20, 50, 100],\r\n                    paginationType: \"stepped\"\r\n                }}\r\n            />\r\n            )\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        {this.renderContent()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {data: state.machine.live_data}\r\n}\r\n\r\nexport default connect(mapStateToProps, {getLiveStatus})(MachineStatusTable);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport Spinner from \"../../components/Spinner\";\r\nimport {getMachines, getSections} from \"../../store/actions/company\";\r\nimport {getFilteredData} from \"../../store/actions/machineStatus\";\r\nimport {notify_error} from \"../../components/Notify\";\r\nimport DataTable from \"./DataTable\";\r\n\r\nclass MachineStatusFilter extends React.Component {\r\n    state = {\r\n        // value: new Date().toISOString(),\r\n        start_date: null,\r\n        start_time: null,\r\n        end_date: null,\r\n        end_time: null,\r\n        section: null,\r\n        machines: null,\r\n        machineList: null,\r\n        shift: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getSections();\r\n    }\r\n\r\n    onSectionSelection = (e) => {\r\n        e.preventDefault();\r\n        let sectionId = parseInt(e.target.value);\r\n        // let sectionIds = Array.from(e.target.selectedOptions, option => parseInt(option.value));\r\n        // let machineList = this.props.sections.filter((section) => sectionIds.includes(section.id));\r\n        let machineList = this.props.sections.filter((section) => section.id === sectionId);\r\n        this.setState({section: sectionId, machineList: machineList});\r\n    }\r\n    onMachineSelection = (e) => {\r\n        e.preventDefault();\r\n        let machineIds = Array.from(e.target.selectedOptions, option => parseInt(option.value));\r\n        this.setState({machines: machineIds})\r\n    }\r\n    onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.start_date || !this.state.end_date){\r\n            notify_error(\"You have to select date range!\")\r\n            return null;\r\n        }\r\n        if (!this.state.start_time || !this.state.end_time){\r\n            notify_error(\"You have to select time!\")\r\n            return null;\r\n        }\r\n        if (!this.state.section){\r\n            notify_error(\"You have to select section!\")\r\n            return null;\r\n        }\r\n        let queryString = \"\";\r\n        if (this.state.section) {\r\n            queryString = queryString + \"&section=\" + this.state.section;\r\n        }\r\n        if (this.state.start_date) {\r\n            queryString = queryString + \"&from=\" + this.state.start_date.toISOString().split(\"T\")[0];\r\n            if (this.state.start_time) {\r\n                queryString = queryString + \"T\" + this.state.start_time.hour() + \":\" + this.state.start_time.minute() + \":00\"\r\n            }\r\n        }\r\n        if (this.state.end_date) {\r\n            queryString = queryString + \"&to=\" + this.state.end_date.toISOString().split(\"T\")[0];\r\n            if(this.state.end_time){\r\n                queryString = queryString + \"T\" + this.state.end_time.hour() + \":\" + this.state.end_time.minute() + \":00\"\r\n            }\r\n        }\r\n        if (this.state.machines) {\r\n            queryString = queryString + \"&machines=\" + this.state.machines.join(\",\");\r\n        }\r\n        // this.props.onFilter(queryString);\r\n        this.props.getFilteredData(queryString);\r\n        console.log(\"query string: query string\", queryString.replace(\"?&\", \"?\"));\r\n\r\n    }\r\n    onClearSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            start_date: null,\r\n            start_time: null,\r\n            end_date: null,\r\n            end_time: null,\r\n            section: null,\r\n            machines: null,\r\n            machineList: null,\r\n            shift: null,\r\n        });\r\n    }\r\n    // renderDataTable = () => {\r\n    //     if (this.props.data.records===undefined || this.props.data.records.length===0){\r\n    //         return (\r\n    //\r\n    //             <div className=\"text-center\">No Data Available</div>\r\n    //         )\r\n    //     }\r\n    //     return <DataTable data={this.props.data}/>\r\n    // }\r\n\r\n    render() {\r\n        if (!this.props.sections) {\r\n            return(\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <Spinner/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"card-title\">Add Filter</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-3 pr-3\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Section</label>\r\n                                                <select className=\"form-control\" onChange={this.onSectionSelection}>\r\n                                                    <option value=\"100\"> -- All --</option>\r\n                                                    {this.props.sections.map(item => {\r\n                                                        if (item.name !== \"All\") {\r\n                                                            return <option key={item.id} value={item.id}>{item.name}</option>\r\n                                                        }\r\n                                                    })}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-2 pl-1\">\r\n                                            <div className=\"form-group\">\r\n                                                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                                    <KeyboardDatePicker\r\n                                                        margin=\"normal\"\r\n                                                        id=\"date-picker-dialog\"\r\n                                                        label=\"Select Date From\"\r\n                                                        format=\"YYYY-MM-DD\"\r\n                                                        value={this.state.start_date}\r\n                                                        onChange={(date) => this.setState({start_date: date})}\r\n                                                        KeyboardButtonProps={{\r\n                                                            'aria-label': 'change date',\r\n                                                        }}\r\n                                                    />\r\n                                                </MuiPickersUtilsProvider>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-2 pl-1\">\r\n                                            <div className=\"form-group\">\r\n                                                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                                    <KeyboardTimePicker\r\n                                                        margin=\"normal\"\r\n                                                        id=\"time-picker\"\r\n                                                        label=\"Select Time From\"\r\n                                                        value={this.state.start_time}\r\n                                                        onChange={(time) => this.setState({start_time: time})}\r\n                                                        KeyboardButtonProps={{\r\n                                                            'aria-label': 'change time',\r\n                                                        }}\r\n                                                    />\r\n                                                </MuiPickersUtilsProvider>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-2 pr-1\">\r\n                                            <div className=\"form-group\">\r\n                                                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                                    <KeyboardDatePicker\r\n                                                        margin=\"normal\"\r\n                                                        id=\"date-picker-dialog\"\r\n                                                        label=\"Select Date To\"\r\n                                                        format=\"YYYY-MM-DD\"\r\n                                                        value={this.state.end_date}\r\n                                                        onChange={(date) => this.setState({end_date: date})}\r\n                                                        KeyboardButtonProps={{\r\n                                                            'aria-label': 'change date',\r\n                                                        }}\r\n                                                    />\r\n                                                </MuiPickersUtilsProvider>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-2 pl-1\">\r\n                                            <div className=\"form-group\">\r\n                                                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                                    <KeyboardTimePicker\r\n                                                        margin=\"normal\"\r\n                                                        id=\"time-picker\"\r\n                                                        label=\"Select Time To\"\r\n                                                        value={this.state.end_time}\r\n                                                        onChange={(time) => this.setState({end_time: time})}\r\n                                                        KeyboardButtonProps={{\r\n                                                            'aria-label': 'change time',\r\n                                                        }}\r\n                                                    />\r\n                                                </MuiPickersUtilsProvider>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-3 pl-1\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Machine</label>\r\n                                                <select multiple className=\"form-control\" onChange={this.onMachineSelection}>\r\n                                                    <option disabled value=\"\"> -- select a section --</option>\r\n                                                    {this.state.machineList ?\r\n                                                        this.state.machineList[0].machines.map(item => <option\r\n                                                            key={item.machine_no} value={item.machine_no}>{item.name}</option>)\r\n                                                        : null\r\n                                                    }\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-4 pr-1\">\r\n                                            <button\r\n                                                type=\"submit\"\r\n                                                className=\"btn btn-warning btn-fill pull-left mr-2\"\r\n                                                onClick={e => this.onFormSubmit(e)}\r\n                                            >\r\n                                                Apply Filter\r\n                                            </button>\r\n                                            <button\r\n                                                type=\"submit\"\r\n                                                className=\"btn btn-danger btn-fill pull-left mr-2\"\r\n                                                onClick={e => this.onClearSubmit(e)}\r\n                                            >\r\n                                                Clear\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <DataTable data={this.props.data} isLoading={this.props.onLoading}/>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.fbAuth.isUserAuthenticated,\r\n        machines: state.company.machines,\r\n        sections: state.company.sections,\r\n        data: state.machine.filtered_data,\r\n        onLoading: state.machine.onLoading,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, {getMachines, getSections, getFilteredData})(MachineStatusFilter);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\n\r\nimport MachineStatusFilter from \"./MachineStatusFilter\";\r\n\r\nimport Spinner from \"../../components/Spinner\";\r\nimport {getFilteredData} from \"../../store/actions/machineStatus\";\r\nimport DataTable from \"./DataTable\";\r\n\r\nclass MachineList extends React.Component {\r\n\r\n    onFilter = queryParams => {\r\n        this.props.getFilteredData(queryParams);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isAuthenticated) {\r\n            return <Redirect to=\"/phone-login\"/>;\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container-fluid\">\r\n                    <MachineStatusFilter onFilter={this.onFilter}/>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.fbAuth.isUserAuthenticated,\r\n        data: state.machine.filtered_data\r\n    };\r\n};\r\nexport default connect(mapStateToProps, {getFilteredData})(MachineList);","import React from 'react';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport List from \"./Project/List\";\r\nimport Create from \"./Project/Create\";\r\nimport Edit from \"./Project/Edit\";\r\nimport Delete from \"./Project/Delete\";\r\nimport Details from \"./Project/Details\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport Logout from \"../components/Logout\";\r\nimport FirebaseLoginForm from \"../components/FirebaseLoginForm\";\r\nimport UserDashboard from \"./UserManagementDashboard/UserDashboard\";\r\nimport UpdateUser from \"./UserManagementDashboard/UpdateUser\";\r\nimport BlockUser from \"./UserManagementDashboard/BlockUser\";\r\nimport DeleteUser from \"./UserManagementDashboard/DeleteUser\";\r\nimport MachineStatusTable from \"./Machines/MachineStatusTable\";\r\n\r\nimport MachineList from \"./Machines/MachineList\";\r\n\r\n\r\nfunction MainNavigation() {\r\n    return (\r\n        <React.Fragment>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={MachineStatusTable}/>\r\n                <Route path=\"/streams/new\" exact component={Create}/>\r\n                <Route path=\"/streams/edit/:id\" exact component={Edit}/>\r\n                <Route path=\"/streams/delete/:id\" exact component={Delete}/>\r\n                <Route path=\"/streams/:id\" exact component={Details}/>\r\n                <Route path=\"/login/\" exact component={LoginForm}/>\r\n                <Route path=\"/phone-login/\" exact component={FirebaseLoginForm}/>\r\n                <Route path=\"/logout/\" exact component={Logout}/>\r\n                <Route path=\"/users/\" exact component={UserDashboard}/>\r\n                <Route path=\"/users/edit/:id\" exact component={UpdateUser}/>\r\n                <Route path=\"/users/block-unblock/:id\" exact component={BlockUser}/>\r\n                <Route path=\"/users/delete/:id\" exact component={DeleteUser}/>\r\n                <Route path=\"/machines/data\" exact component={MachineList}/>\r\n            </Switch>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {isAuthenticated: state.auth.isAuthenticated}\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainNavigation);\r\n","import React, {useRef} from 'react';\r\nimport IdleTimer from \"react-idle-timer\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport {userLogOut} from \"../store/actions/auth\";\r\n\r\nconst IdleTimerContainer = (props) => {\r\n    const idleTimerRef = useRef(null);\r\n    const onIdle = () => {\r\n        console.log(\"User Idle\");\r\n        // props.userLogOut();\r\n    }\r\n    return(\r\n        <div>\r\n            <IdleTimer\r\n                ref={idleTimerRef}\r\n                timeout={216000*1000} // 30 seconds\r\n                onIdle={onIdle}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, {userLogOut})(IdleTimerContainer);","import React from 'react';\r\nimport {Router} from \"react-router-dom\";\r\n\r\nimport Nav from \"./Nav/Nav\";\r\nimport SideBar from \"./SideBar/SideBar\";\r\nimport Footer from \"./Footer/Footer\";\r\nimport history from \"./history\";\r\nimport Project from \"./pages/MainNavigation\";\r\nimport IdleTimerContainer from \"./components/IdleTimerContainer\";\r\n\r\nfunction App() {\r\n    console.log(\"env: \", process.env);\r\n  return (\r\n    <div className=\"wrapper\">\r\n        <IdleTimerContainer/>\r\n        <Router history={history}>\r\n          <SideBar/>\r\n          <div className=\"main-panel\">\r\n              <Nav/>\r\n              <div className=\"content\">\r\n                <Project/>\r\n              </div>\r\n              <Footer/>\r\n          </div>\r\n        </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import _ from \"lodash\";\r\nimport * as actionTypes from '../actions/type';\r\n\r\nlet token;\r\nlet isAuthenticated;\r\nif(localStorage.getItem(\"token\")){\r\n    token = localStorage.getItem(\"token\");\r\n    isAuthenticated = true;\r\n}else {\r\n    token = null;\r\n    isAuthenticated = false;\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    isAuthenticated: isAuthenticated,\r\n    token: token\r\n}\r\n\r\nconst authReducer = (state=INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOG_IN:\r\n            if(action.payload.token){\r\n                localStorage.setItem('token', action.payload.token);\r\n                return {isAuthenticated: true, token: action.payload.token}\r\n            }\r\n            localStorage.removeItem('token');\r\n            return {isAuthenticated: false, token: null}\r\n        case actionTypes.LOG_OUT:\r\n            localStorage.removeItem('token');\r\n            return {isAuthenticated: false, token: null}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","import _ from \"lodash\";\r\nimport * as actionTypes from '../actions/type';\r\n\r\nconst INITIAL_STATE = {\r\n    prev_link: null,\r\n    next_link: null,\r\n    results: {}\r\n}\r\n\r\n\r\nconst streamReducer = (state=INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_STREAMS:\r\n            // return {...state, ..._.mapKeys(action.payload, 'id')}\r\n            return {...state, results: {...state.results, ..._.mapKeys(action.payload, 'id')}}\r\n        case actionTypes.FETCH_STREAM:\r\n            // return {...state, [action.payload.id]: action.payload}\r\n            return {...state, results: {...state.results, [action.payload.id]: action.payload}}\r\n        case actionTypes.CREATE_STREAM:\r\n            // return {...state, [action.payload.id]: action.payload}\r\n            return {...state, results:{...state.results, [action.payload.id]: action.payload}}\r\n        case actionTypes.EDIT_STREAM:\r\n            // const newState = {...state};\r\n            // newState[action.payload.id] = action.payload;\r\n            // return newState;\r\n            // return {...state, [action.payload.id]: action.payload}\r\n            return {...state, results:{...state.results, [action.payload.id]: action.payload}}\r\n        case actionTypes.DELETE_STREAM:\r\n            // return _.omit(state, action.payload)\r\n            const result = _.omit(state.results, action.payload);\r\n            return {...state, results: {...result}}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default streamReducer;","import * as actionTypes from '../actions/type';\r\n\r\nlet isUserAuthenticated = !!localStorage.getItem(\"idToken\");\r\n\r\nconst INITIAL_STATE = {\r\n    isUserAuthenticated: isUserAuthenticated,\r\n    idToken: localStorage.getItem(\"idToken\"),\r\n    refreshToken: localStorage.getItem(\"refreshToken\"),\r\n}\r\n\r\nconst firebaseAuthReducer = (state=INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_LOG_IN:\r\n            return {...state,\r\n                isUserAuthenticated: true,\r\n                idToken: localStorage.getItem(\"idToken\"),\r\n                refreshToken: localStorage.getItem(\"refreshToken\"),\r\n            }\r\n        case actionTypes.REFRESH_TOKEN:\r\n            return {...state,\r\n                isUserAuthenticated: true,\r\n                idToken: action.payload.id_token,\r\n                refreshToken: action.payload.refresh_token,\r\n            }\r\n        case actionTypes.USER_LOG_OUT:\r\n            localStorage.removeItem('idToken');\r\n            localStorage.removeItem('refreshToken');\r\n            localStorage.removeItem('name');\r\n            return {...state,\r\n                isUserAuthenticated: false,\r\n                idToken: null,\r\n                refreshToken: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default firebaseAuthReducer;","import _ from \"lodash\";\r\nimport * as actionTypes from '../actions/type';\r\n\r\n\r\nconst userReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_USERS:\r\n            console.log(\"fetch user reducer============\");\r\n            console.log(\"users============\", {...state, ...action.payload});\r\n            return {...state, ...action.payload}\r\n        case actionTypes.FETCH_USER:\r\n            return {...state, user: {...state.user, ...action.payload}}\r\n        case actionTypes.CREATE_USER:\r\n            // return {...state, [action.payload.id]: action.payload}\r\n            return {...state, user: {...state.user, ...action.payload}}\r\n        case actionTypes.EDIT_USER:\r\n            return {...state, user: {...state.user, ...action.payload}}\r\n        case actionTypes.BLOCK_UNBLOCK_USER:\r\n            return state;\r\n        case actionTypes.DELETE_USER:\r\n            // return _.omit(state, action.payload)\r\n            const id = parseInt(action.payload);\r\n            console.log(\"Id: \", id);\r\n            const result = state.results.filter(item => item.id !==id);\r\n            console.log(\"result: \", result);\r\n            return {...state, results: result}\r\n        case actionTypes.USER_GROUPS:\r\n            const groups = {groups: action.payload}\r\n            return {...state, ...groups}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userReducer;","import * as actionTypes from '../actions/type';\r\n\r\nconst companyReducer = (state={}, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_SECTIONS:\r\n            return {...state, sections: action.payload}\r\n        case actionTypes.FETCH_MACHINES:\r\n            return {...state, machines: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default companyReducer;","import * as actionTypes from '../actions/type';\r\n\r\nconst INITIAL_STATE = {\r\n    live_data: [],\r\n    filtered_data: [],\r\n    onLoading: false\r\n}\r\n\r\nconst machineStatusReducer = (state=INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LIVE_STATUS:\r\n            return {...state, live_data: action.payload}\r\n        case actionTypes.FILTERED_DATA:\r\n            return {...state, filtered_data: action.payload}\r\n        case actionTypes.IS_FETCHING:\r\n            return {...state, onLoading: true}\r\n        case actionTypes.IS_FETCHED:\r\n            return {...state, onLoading: false}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default machineStatusReducer;","import {combineReducers} from \"redux\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\n\r\nimport streamReducer from \"./streamReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport firebaseAuthReducer from \"./firebaseAuthReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport companyReducer from \"./companyReducer\";\r\nimport machineStatusReducer from \"./machineStatusReducer\";\r\n\r\nexport default combineReducers({\r\n    form: formReducer,\r\n    streams: streamReducer,\r\n    auth: authReducer,\r\n    fbAuth: firebaseAuthReducer,\r\n    users: userReducer,\r\n    company: companyReducer,\r\n    machine: machineStatusReducer,\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider } from 'react-redux';\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from './App';\r\nimport reducers from './store/reducers'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store} >\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}