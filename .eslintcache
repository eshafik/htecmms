[{"E:\\projects\\HTEC\\machine_status_management_front\\src\\index.js":"1","E:\\projects\\HTEC\\machine_status_management_front\\src\\App.js":"2","E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\reducers\\index.js":"3","E:\\projects\\HTEC\\machine_status_management_front\\src\\history.js":"4","E:\\projects\\HTEC\\machine_status_management_front\\src\\Nav\\Nav.js":"5","E:\\projects\\HTEC\\machine_status_management_front\\src\\Footer\\Footer.js":"6","E:\\projects\\HTEC\\machine_status_management_front\\src\\SideBar\\SideBar.js":"7","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\MainNavigation.js":"8","E:\\projects\\HTEC\\machine_status_management_front\\src\\components\\IdleTimerContainer.js":"9","E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\reducers\\authReducer.js":"10","E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\reducers\\firebaseAuthReducer.js":"11","E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\reducers\\streamReducer.js":"12","E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\reducers\\userReducer.js":"13","E:\\projects\\HTEC\\machine_status_management_front\\src\\components\\FirebaseLoginForm.js":"14","E:\\projects\\HTEC\\machine_status_management_front\\src\\components\\LoginForm.js":"15","E:\\projects\\HTEC\\machine_status_management_front\\src\\components\\Logout.js":"16","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Project\\Edit.js":"17","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Project\\Create.js":"18","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Project\\List.js":"19","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Project\\Details.js":"20","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Project\\Delete.js":"21","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\UserManagementDashboard\\UserDashboard.js":"22","E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\actions\\firebaseAuth.js":"23","E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\actions\\auth.js":"24","E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\actions\\type.js":"25","E:\\projects\\HTEC\\machine_status_management_front\\src\\firebaseConfig.js":"26","E:\\projects\\HTEC\\machine_status_management_front\\src\\components\\Notify.js":"27","E:\\projects\\HTEC\\machine_status_management_front\\src\\helper.js":"28","E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\actions\\stream.js":"29","E:\\projects\\HTEC\\machine_status_management_front\\src\\components\\Table.js":"30","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Project\\ProjectForm.js":"31","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\UserManagementDashboard\\UsersList.js":"32","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\UserManagementDashboard\\CreateUser.js":"33","E:\\projects\\HTEC\\machine_status_management_front\\src\\api\\firebaseRefreshToken.js":"34","E:\\projects\\HTEC\\machine_status_management_front\\src\\api\\backend.js":"35","E:\\projects\\HTEC\\machine_status_management_front\\src\\api\\machineStatusManagement.js":"36","E:\\projects\\HTEC\\machine_status_management_front\\src\\api\\stream.js":"37","E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\actions\\user.js":"38","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\UserManagementDashboard\\UserForm.js":"39","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\UserManagementDashboard\\UpdateUser.js":"40","E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\reducers\\companyReducer.js":"41","E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\actions\\company.js":"42","E:\\projects\\HTEC\\machine_status_management_front\\src\\components\\Spinner.js":"43","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\UserManagementDashboard\\BlockUser.js":"44","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\UserManagementDashboard\\DeleteUser.js":"45","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Machines\\MachineList.js":"46","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Machines\\MachineStatusTable.js":"47","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Machines\\MachineStatusFilter.js":"48","E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\reducers\\machineStatusReducer.js":"49","E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\actions\\machineStatus.js":"50","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Machines\\DataTable.js":"51"},{"size":563,"mtime":1609644068389,"results":"52","hashOfConfig":"53"},{"size":782,"mtime":1609644709286,"results":"54","hashOfConfig":"53"},{"size":631,"mtime":1611066443285,"results":"55","hashOfConfig":"53"},{"size":91,"mtime":1609644068388,"results":"56","hashOfConfig":"53"},{"size":7049,"mtime":1609644068345,"results":"57","hashOfConfig":"53"},{"size":1632,"mtime":1609644068344,"results":"58","hashOfConfig":"53"},{"size":1959,"mtime":1609811262851,"results":"59","hashOfConfig":"53"},{"size":2146,"mtime":1611215718356,"results":"60","hashOfConfig":"53"},{"size":640,"mtime":1609681998412,"results":"61","hashOfConfig":"53"},{"size":1018,"mtime":1609644068397,"results":"62","hashOfConfig":"53"},{"size":1329,"mtime":1609776284645,"results":"63","hashOfConfig":"53"},{"size":1525,"mtime":1609644068399,"results":"64","hashOfConfig":"53"},{"size":1425,"mtime":1609808963439,"results":"65","hashOfConfig":"53"},{"size":7585,"mtime":1609644068386,"results":"66","hashOfConfig":"53"},{"size":3680,"mtime":1609644068387,"results":"67","hashOfConfig":"53"},{"size":1495,"mtime":1609644068387,"results":"68","hashOfConfig":"53"},{"size":1416,"mtime":1609644068391,"results":"69","hashOfConfig":"53"},{"size":523,"mtime":1609644068390,"results":"70","hashOfConfig":"53"},{"size":1565,"mtime":1611190933704,"results":"71","hashOfConfig":"53"},{"size":186,"mtime":1609644068390,"results":"72","hashOfConfig":"53"},{"size":1696,"mtime":1609644068390,"results":"73","hashOfConfig":"53"},{"size":1158,"mtime":1609691428227,"results":"74","hashOfConfig":"53"},{"size":1238,"mtime":1609756048163,"results":"75","hashOfConfig":"53"},{"size":915,"mtime":1609644068393,"results":"76","hashOfConfig":"53"},{"size":929,"mtime":1611234523424,"results":"77","hashOfConfig":"53"},{"size":491,"mtime":1609644068388,"results":"78","hashOfConfig":"53"},{"size":569,"mtime":1609644068387,"results":"79","hashOfConfig":"53"},{"size":402,"mtime":1609644068388,"results":"80","hashOfConfig":"53"},{"size":1446,"mtime":1609644068396,"results":"81","hashOfConfig":"53"},{"size":1922,"mtime":1609810202858,"results":"82","hashOfConfig":"53"},{"size":3207,"mtime":1609644068392,"results":"83","hashOfConfig":"53"},{"size":2233,"mtime":1609810189961,"results":"84","hashOfConfig":"53"},{"size":1133,"mtime":1609777942995,"results":"85","hashOfConfig":"53"},{"size":125,"mtime":1609644068346,"results":"86","hashOfConfig":"53"},{"size":125,"mtime":1609644068345,"results":"87","hashOfConfig":"53"},{"size":132,"mtime":1609738258435,"results":"88","hashOfConfig":"53"},{"size":107,"mtime":1609735403984,"results":"89","hashOfConfig":"53"},{"size":8297,"mtime":1609810084563,"results":"90","hashOfConfig":"53"},{"size":6421,"mtime":1609809556327,"results":"91","hashOfConfig":"53"},{"size":1468,"mtime":1609777911826,"results":"92","hashOfConfig":"53"},{"size":413,"mtime":1609921555470,"results":"93","hashOfConfig":"53"},{"size":2243,"mtime":1609921555510,"results":"94","hashOfConfig":"53"},{"size":354,"mtime":1609777865882,"results":"95","hashOfConfig":"53"},{"size":2655,"mtime":1609810321389,"results":"96","hashOfConfig":"53"},{"size":1552,"mtime":1609810348128,"results":"97","hashOfConfig":"53"},{"size":1445,"mtime":1611244948413,"results":"98","hashOfConfig":"53"},{"size":3205,"mtime":1611216754081,"results":"99","hashOfConfig":"53"},{"size":12093,"mtime":1611238333163,"results":"100","hashOfConfig":"53"},{"size":511,"mtime":1611234523398,"results":"101","hashOfConfig":"53"},{"size":2220,"mtime":1611234523415,"results":"102","hashOfConfig":"53"},{"size":2222,"mtime":1611244782595,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1d3yr8x",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\projects\\HTEC\\machine_status_management_front\\src\\index.js",[],["216","217"],"E:\\projects\\HTEC\\machine_status_management_front\\src\\App.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\reducers\\index.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\history.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\Nav\\Nav.js",["218","219","220","221","222","223","224","225","226"],"import React from 'react';\r\nimport {Link, Route, Switch} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\n\r\n// import {userLoginWithPhone, userLogOut} from \"../store/actions/auth\";\r\nimport {userLoginWithPhone, userLogOutWithPhone} from \"../store/actions/firebaseAuth\";\r\nimport List from \"../pages/Project/List\";\r\nimport Create from \"../pages/Project/Create\";\r\nimport Edit from \"../pages/Project/Edit\";\r\nimport Delete from \"../pages/Project/Delete\";\r\nimport Details from \"../pages/Project/Details\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport Logout from \"../components/Logout\";\r\n\r\nclass Nav extends React.Component {\r\n\r\n    state = {\r\n        isToggled: false\r\n    }\r\n\r\n    onToggleHandler = () => {\r\n        this.setState({\r\n            isToggled: !this.state.isToggled\r\n        });\r\n    }\r\n\r\n    renderLogin() {\r\n        if (this.props.isAuthenticated) {\r\n            return (\r\n                <Link className=\"nav-link\" to=\"/logout\">\r\n                    <span className=\"no-icon\">Log out</span>\r\n                </Link>\r\n            )\r\n        } else {\r\n            return (\r\n                <Link className=\"nav-link\" to=\"/phone-login\">\r\n                    <span className=\"no-icon\">Login</span>\r\n                </Link>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {isToggled} = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <nav className=\"navbar navbar-expand-lg \">\r\n                    <div className=\"container-fluid\">\r\n                        <Link className=\"navbar-brand\" to=\"/#\"> Dashboard </Link>\r\n                        <button\r\n                            onClick={this.onToggleHandler}\r\n                            className={'navbar-toggler navbar-toggler-right' + (isToggled ? ' toggled' : '')}\r\n                            type=\"button\" data-toggle=\"collapse\"\r\n                            aria-controls=\"navigation-index\"\r\n                            aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\"\r\n                        >\r\n                            <span className=\"navbar-toggler-bar burger-lines\"/>\r\n                            <span className=\"navbar-toggler-bar burger-lines\"/>\r\n                            <span className=\"navbar-toggler-bar burger-lines\"/>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse justify-content-end\" id=\"navigation\">\r\n                            {/*<ul className=\"nav navbar-nav mr-auto\">*/}\r\n                            {/*    <li className=\"nav-item\">*/}\r\n                            {/*        <Link to=\"/#\" className=\"nav-link\" data-toggle=\"dropdown\">*/}\r\n                            {/*            <i className=\"nc-icon nc-palette\"/>*/}\r\n                            {/*            <span className=\"d-lg-none\">Dashboard</span>*/}\r\n                            {/*        </Link>*/}\r\n                            {/*    </li>*/}\r\n                            {/*    <li className=\"dropdown nav-item\">*/}\r\n                            {/*        <Link to=\"/#\" className=\"dropdown-toggle nav-link\" data-toggle=\"dropdown\">*/}\r\n                            {/*            <i className=\"nc-icon nc-planet\"/>*/}\r\n                            {/*            <span className=\"notification\">5</span>*/}\r\n                            {/*            <span className=\"d-lg-none\">Notification</span>*/}\r\n                            {/*        </Link>*/}\r\n                            {/*        <ul className=\"dropdown-menu\">*/}\r\n                            {/*            <Link className=\"dropdown-item\" to=\"/#\">Notification 1</Link>*/}\r\n                            {/*            <Link className=\"dropdown-item\" to=\"/#\">Notification 2</Link>*/}\r\n                            {/*            <Link className=\"dropdown-item\" to=\"/#\">Notification 3</Link>*/}\r\n                            {/*            <Link className=\"dropdown-item\" to=\"/#\">Notification 4</Link>*/}\r\n                            {/*            <Link className=\"dropdown-item\" to=\"/#\">Another notification</Link>*/}\r\n                            {/*        </ul>*/}\r\n                            {/*    </li>*/}\r\n                            {/*    <li className=\"nav-item\">*/}\r\n                            {/*        <Link to=\"/#\" className=\"nav-link\">*/}\r\n                            {/*            <i className=\"nc-icon nc-zoom-split\"/>*/}\r\n                            {/*            <span className=\"d-lg-block\">&nbsp;Search</span>*/}\r\n                            {/*        </Link>*/}\r\n                            {/*    </li>*/}\r\n                            {/*</ul>*/}\r\n                            <ul className=\"navbar-nav ml-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/shafik\">\r\n                                        {this.props.isUserAuthenticated ?\r\n                                            <span className=\"no-icon\">Account</span> :\r\n                                            <span className=\"no-icon\">{localStorage.getItem('name')}</span>}\r\n                                    </Link>\r\n                                </li>\r\n                                {/*<li className=\"nav-item dropdown\">*/}\r\n                                {/*    <Link className=\"nav-link dropdown-toggle\" to=\"/#\"*/}\r\n                                {/*       id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\"*/}\r\n                                {/*       aria-expanded=\"false\">*/}\r\n                                {/*        <span className=\"no-icon\">Dropdown</span>*/}\r\n                                {/*    </Link>*/}\r\n                                {/*    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">*/}\r\n                                {/*        <Link className=\"dropdown-item\" to=\"/#\">Action</Link>*/}\r\n                                {/*        <Link className=\"dropdown-item\" to=\"/#\">Another action</Link>*/}\r\n                                {/*        <Link className=\"dropdown-item\" to=\"/#\">Something</Link>*/}\r\n                                {/*        <Link className=\"dropdown-item\" to=\"/#\">Something else here</Link>*/}\r\n                                {/*        <div className=\"divider\"/>*/}\r\n                                {/*        <Link className=\"dropdown-item\" to=\"/#\">Separated link</Link>*/}\r\n                                {/*    </div>*/}\r\n                                {/*</li>*/}\r\n                                <li className=\"nav-item\">\r\n                                    {this.renderLogin()}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {isAuthenticated: state.fbAuth.isUserAuthenticated}\r\n}\r\n\r\nexport default connect(mapStateToProps, {userLoginWithPhone, userLogOutWithPhone})(Nav);","E:\\projects\\HTEC\\machine_status_management_front\\src\\Footer\\Footer.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\SideBar\\SideBar.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\MainNavigation.js",["227"],"import React from 'react';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport List from \"./Project/List\";\r\nimport Create from \"./Project/Create\";\r\nimport Edit from \"./Project/Edit\";\r\nimport Delete from \"./Project/Delete\";\r\nimport Details from \"./Project/Details\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport Logout from \"../components/Logout\";\r\nimport FirebaseLoginForm from \"../components/FirebaseLoginForm\";\r\nimport UserDashboard from \"./UserManagementDashboard/UserDashboard\";\r\nimport UpdateUser from \"./UserManagementDashboard/UpdateUser\";\r\nimport BlockUser from \"./UserManagementDashboard/BlockUser\";\r\nimport DeleteUser from \"./UserManagementDashboard/DeleteUser\";\r\nimport MachineStatusTable from \"./Machines/MachineStatusTable\";\r\n\r\nimport MachineList from \"./Machines/MachineList\";\r\n\r\n\r\nfunction MainNavigation() {\r\n    return (\r\n        <React.Fragment>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={MachineStatusTable}/>\r\n                <Route path=\"/streams/new\" exact component={Create}/>\r\n                <Route path=\"/streams/edit/:id\" exact component={Edit}/>\r\n                <Route path=\"/streams/delete/:id\" exact component={Delete}/>\r\n                <Route path=\"/streams/:id\" exact component={Details}/>\r\n                <Route path=\"/login/\" exact component={LoginForm}/>\r\n                <Route path=\"/phone-login/\" exact component={FirebaseLoginForm}/>\r\n                <Route path=\"/logout/\" exact component={Logout}/>\r\n                <Route path=\"/users/\" exact component={UserDashboard}/>\r\n                <Route path=\"/users/edit/:id\" exact component={UpdateUser}/>\r\n                <Route path=\"/users/block-unblock/:id\" exact component={BlockUser}/>\r\n                <Route path=\"/users/delete/:id\" exact component={DeleteUser}/>\r\n                <Route path=\"/machines/live\" exact component={MachineList}/>\r\n            </Switch>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {isAuthenticated: state.auth.isAuthenticated}\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainNavigation);\r\n","E:\\projects\\HTEC\\machine_status_management_front\\src\\components\\IdleTimerContainer.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\reducers\\authReducer.js",["228"],"import _ from \"lodash\";\r\nimport * as actionTypes from '../actions/type';\r\n\r\nlet token;\r\nlet isAuthenticated;\r\nif(localStorage.getItem(\"token\")){\r\n    token = localStorage.getItem(\"token\");\r\n    isAuthenticated = true;\r\n}else {\r\n    token = null;\r\n    isAuthenticated = false;\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    isAuthenticated: isAuthenticated,\r\n    token: token\r\n}\r\n\r\nconst authReducer = (state=INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOG_IN:\r\n            if(action.payload.token){\r\n                localStorage.setItem('token', action.payload.token);\r\n                return {isAuthenticated: true, token: action.payload.token}\r\n            }\r\n            localStorage.removeItem('token');\r\n            return {isAuthenticated: false, token: null}\r\n        case actionTypes.LOG_OUT:\r\n            localStorage.removeItem('token');\r\n            return {isAuthenticated: false, token: null}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\reducers\\firebaseAuthReducer.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\reducers\\streamReducer.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\reducers\\userReducer.js",["229"],"import _ from \"lodash\";\r\nimport * as actionTypes from '../actions/type';\r\n\r\n\r\nconst userReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_USERS:\r\n            console.log(\"fetch user reducer============\");\r\n            console.log(\"users============\", {...state, ...action.payload});\r\n            return {...state, ...action.payload}\r\n        case actionTypes.FETCH_USER:\r\n            return {...state, user: {...state.user, ...action.payload}}\r\n        case actionTypes.CREATE_USER:\r\n            // return {...state, [action.payload.id]: action.payload}\r\n            return {...state, user: {...state.user, ...action.payload}}\r\n        case actionTypes.EDIT_USER:\r\n            return {...state, user: {...state.user, ...action.payload}}\r\n        case actionTypes.BLOCK_UNBLOCK_USER:\r\n            return state;\r\n        case actionTypes.DELETE_USER:\r\n            // return _.omit(state, action.payload)\r\n            const id = parseInt(action.payload);\r\n            console.log(\"Id: \", id);\r\n            const result = state.results.filter(item => item.id !==id);\r\n            console.log(\"result: \", result);\r\n            return {...state, results: result}\r\n        case actionTypes.USER_GROUPS:\r\n            const groups = {groups: action.payload}\r\n            return {...state, ...groups}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userReducer;","E:\\projects\\HTEC\\machine_status_management_front\\src\\components\\FirebaseLoginForm.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\components\\LoginForm.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\components\\Logout.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Project\\Edit.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Project\\Create.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Project\\List.js",["230","231"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport history from \"../../history\";\r\n\r\nimport {fetchStreams} from \"../../store/actions/stream\";\r\nimport Table from \"../../components/Table\";\r\nimport DataTable from \"../Machines/DataTable\";\r\n\r\nclass List extends React.Component{\r\n    // componentDidMount() {\r\n    //     this.props.fetchStreams();\r\n    // }\r\n\r\n    renderList(){\r\n\r\n        return  this.props.streams.map((stream, index) => {\r\n            return(\r\n                <tr key={index}>\r\n                    <td>{stream.id}</td>\r\n                    <td>{stream.title}</td>\r\n                    <td>{stream.description}</td>\r\n                    <td><Link to={`/streams/edit/${stream.id}`} className=\"btn btn-primary\">Edit</Link></td>\r\n                    <td><Link to={`/streams/delete/${stream.id}`} className=\"btn btn-danger\">Delete</Link></td>\r\n                </tr>\r\n            )\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if (! this.props.isAuthenticated){\r\n            return <Redirect to=\"/phone-login\" />;\r\n        }\r\n        // if (!this.props.streams){\r\n        //     return <div>Loading</div>\r\n        // }\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <DataTable/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {streams: Object.values(state.streams.results),\r\n            isAuthenticated: state.fbAuth.isUserAuthenticated};\r\n};\r\nexport default connect(mapStateToProps, {fetchStreams})(List);","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Project\\Details.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Project\\Delete.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\UserManagementDashboard\\UserDashboard.js",["232","233","234","235"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {Tabs, Tab} from \"react-bootstrap\";\r\nimport history from \"../../history\";\r\n\r\nimport {fetchStreams} from \"../../store/actions/stream\";\r\nimport Table from \"../../components/Table\";\r\nimport UsersList from \"./UsersList\";\r\nimport CreateUser from \"./CreateUser\";\r\n\r\nclass UserDashboard extends React.Component{\r\n\r\n    render() {\r\n        if (! this.props.isAuthenticated){\r\n            return <Redirect to=\"/phone-login\" />;\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <Tabs defaultActiveKey=\"users\">\r\n                    <Tab eventKey=\"users\" title=\"Users List\">\r\n                        <UsersList/>\r\n                    </Tab>\r\n                    <Tab eventKey=\"create\" title=\"Create New User\">\r\n                        <CreateUser/>\r\n                    </Tab>\r\n                </Tabs>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {isAuthenticated: state.fbAuth.isUserAuthenticated};\r\n};\r\nexport default connect(mapStateToProps)(UserDashboard);","E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\actions\\firebaseAuth.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\actions\\auth.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\actions\\type.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\firebaseConfig.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\components\\Notify.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\helper.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\actions\\stream.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\components\\Table.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Project\\ProjectForm.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\UserManagementDashboard\\UsersList.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\UserManagementDashboard\\CreateUser.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\api\\firebaseRefreshToken.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\api\\backend.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\api\\machineStatusManagement.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\api\\stream.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\actions\\user.js",["236"],"import history from \"../../history\";\r\n\r\nimport * as actionTypes from \"./type\"\r\nimport streams from \"../../api/stream\";\r\nimport machineStatusManagement from \"../../api/machineStatusManagement\";\r\nimport {notify_error, notify_success} from \"../../components/Notify\";\r\nimport {refreshToken} from \"./firebaseAuth\";\r\n\r\n\r\nexport const getUserGroup = () => async (dispatch, getState) => {\r\n    try{\r\n        const response = await machineStatusManagement.get('/users/groups', {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        dispatch({type: actionTypes.USER_GROUPS, payload: response.data});\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                const response = await machineStatusManagement.get('/users/groups', {\r\n                    headers: {\r\n                        'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                    },\r\n                });\r\n                dispatch({type: actionTypes.USER_GROUPS, payload: response.data});\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const createUser = formValues => async (dispatch, getState) => {\r\n    try{\r\n        const response = await machineStatusManagement.post('/users/', {...formValues}, {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            }\r\n        });\r\n        if (response.status === 201) {\r\n            notify_success(\"Stream Creation Succeed!\");\r\n        }\r\n        dispatch({type: actionTypes.CREATE_USER, payload: response.data});\r\n        history.push(\"/users\");\r\n        window.location.reload();\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                    const response = await machineStatusManagement.post('/users/', {...formValues}, {\r\n                        headers: {\r\n                            'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                        }\r\n                    });\r\n                    if (response.status === 201) {\r\n                        notify_success(\"Stream Creation Succeed!\");\r\n                    }\r\n                    dispatch({type: actionTypes.CREATE_USER, payload: response.data});\r\n                    history.push(\"/users\");\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n        notify_error(\"Error Creating New User!\");\r\n\r\n    }\r\n};\r\n\r\nexport const fetchUsers = () => async (dispatch, getState) => {\r\n    try{\r\n        let response = await machineStatusManagement.get('/users', {\r\n            headers: {\r\n                'Authorization': 'jwt ' + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        dispatch({type: actionTypes.FETCH_USERS, payload: response.data});\r\n    }catch (e) {\r\n            if (e.response && e.response.status===401) {\r\n                refreshToken().then(async function () {\r\n                    const response = await machineStatusManagement.get('/users', {\r\n                        headers: {\r\n                            'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                        },\r\n                    });\r\n                    dispatch({type: actionTypes.FETCH_USERS, payload: response.data});\r\n                    }\r\n                ).catch(function (e) {\r\n                    notify_error(\"Network Error!\");\r\n                })\r\n            }\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const fetchUser = (id) => async (dispatch, getState) => {\r\n    try{\r\n        const response = await machineStatusManagement.get(`/users/${id}/`, {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        dispatch({type: actionTypes.FETCH_USER, payload: response.data});\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                const response = await machineStatusManagement.get(`/users/${id}/`, {\r\n                    headers: {\r\n                        'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                    },\r\n                });\r\n                dispatch({type: actionTypes.FETCH_USER, payload: response.data});\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport const editUser = (id, formValues) => async dispatch => {\r\n    try{\r\n        const response = await machineStatusManagement.patch(`/users/${id}/`, formValues, {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        dispatch({type: actionTypes.EDIT_USER, payload: response.data});\r\n        notify_success(\"Updated Successfully!\")\r\n        history.push(\"/users\");\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                const response = await machineStatusManagement.patch(`/users/${id}`, formValues, {\r\n                    headers: {\r\n                        'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                    },\r\n                });\r\n                dispatch({type: actionTypes.EDIT_USER, payload: response.data});\r\n                notify_success(\"Updated Successfully!\")\r\n                history.push(\"/\");\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const blockUnblockUser = (id, isBlocked) => async dispatch => {\r\n    try{\r\n        const formValues = {is_blocked: isBlocked}\r\n        await machineStatusManagement.patch(`/users/${id}/`, formValues, {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        dispatch({type: actionTypes.BLOCK_UNBLOCK_USER});\r\n        notify_success(\"Action Successful!\");\r\n        history.push(\"/users\");\r\n        // window.location.reload();\r\n\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                const formValues = {is_blocked: isBlocked}\r\n                await machineStatusManagement.patch(`/users/${id}/`, formValues, {\r\n                    headers: {\r\n                        'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                    },\r\n                });\r\n                dispatch({type: actionTypes.BLOCK_UNBLOCK_USER});\r\n                notify_success(\"Action Successful!\");\r\n                history.push(\"/users\");\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const deleteUser = id => async dispatch => {\r\n    try{\r\n        const formValues = {is_active: false}\r\n        await machineStatusManagement.patch(`/users/${id}/`, formValues, {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        dispatch({type: actionTypes.DELETE_USER, payload: id});\r\n        notify_success(\"User Deletion Successful!\");\r\n        history.push(\"/users\");\r\n\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                const formValues = {is_active: false}\r\n                await machineStatusManagement.patch(`/users/${id}/`, formValues, {\r\n                    headers: {\r\n                        'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                    },\r\n                });\r\n                dispatch({type: actionTypes.DELETE_USER, payload: id});\r\n                notify_success(\"User Deletion Successful!\");\r\n                history.push(\"/users\");\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n};","E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\UserManagementDashboard\\UserForm.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\UserManagementDashboard\\UpdateUser.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\reducers\\companyReducer.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\actions\\company.js",["237"],"import history from \"../../history\";\r\n\r\nimport * as actionTypes from \"./type\"\r\nimport machineStatusManagement from \"../../api/machineStatusManagement\";\r\nimport {refreshToken} from \"./firebaseAuth\";\r\nimport {notify_error} from \"../../components/Notify\";\r\n\r\n\r\nexport const getSections = () => async dispatch => {\r\n    try{\r\n        const response = await machineStatusManagement.get('/company/sections', {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        console.log(\"section result: \", response.data);\r\n        dispatch({type: actionTypes.FETCH_SECTIONS, payload: response.data});\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                const response = await machineStatusManagement.get('/company/sections', {\r\n                    headers: {\r\n                        'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                    },\r\n                });\r\n                dispatch({type: actionTypes.FETCH_SECTIONS, payload: response.data});\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const getMachines = () => async dispatch => {\r\n    try{\r\n        const response = await machineStatusManagement.get('/company/machines', {\r\n            headers: {\r\n                'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n            },\r\n        });\r\n        dispatch({type: actionTypes.FETCH_MACHINES, payload: response.data});\r\n    }catch (e) {\r\n        if (e.response && e.response.status===401) {\r\n            refreshToken().then(async function () {\r\n                const response = await machineStatusManagement.get('/company/machines', {\r\n                    headers: {\r\n                        'Authorization': \"jwt \" + localStorage.getItem(\"idToken\")\r\n                    },\r\n                });\r\n                dispatch({type: actionTypes.FETCH_MACHINES, payload: response.data});\r\n                }\r\n            ).catch(function (e) {\r\n                notify_error(\"Network Error!\");\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n};\r\n","E:\\projects\\HTEC\\machine_status_management_front\\src\\components\\Spinner.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\UserManagementDashboard\\BlockUser.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\UserManagementDashboard\\DeleteUser.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Machines\\MachineList.js",["238","239"],"E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Machines\\MachineStatusTable.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Machines\\MachineStatusFilter.js",["240","241","242"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport Spinner from \"../../components/Spinner\";\r\nimport {getMachines, getSections} from \"../../store/actions/company\";\r\nimport {notify_error} from \"../../components/Notify\";\r\n\r\nclass MachineStatusFilter extends React.Component {\r\n    state = {\r\n        // value: new Date().toISOString(),\r\n        start_date: null,\r\n        start_time: null,\r\n        end_date: null,\r\n        end_time: null,\r\n        section: null,\r\n        machines: null,\r\n        machineList: null,\r\n        shift: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getSections();\r\n    }\r\n\r\n    onSectionSelection = (e) => {\r\n        e.preventDefault();\r\n        let sectionId = parseInt(e.target.value);\r\n        // let sectionIds = Array.from(e.target.selectedOptions, option => parseInt(option.value));\r\n        // let machineList = this.props.sections.filter((section) => sectionIds.includes(section.id));\r\n        let machineList = this.props.sections.filter((section) => section.id === sectionId);\r\n        this.setState({section: sectionId, machineList: machineList});\r\n    }\r\n    onMachineSelection = (e) => {\r\n        e.preventDefault();\r\n        let machineIds = Array.from(e.target.selectedOptions, option => parseInt(option.value));\r\n        this.setState({machines: machineIds})\r\n    }\r\n    onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.start_date || !this.state.end_date){\r\n            notify_error(\"You have to select date range!\")\r\n            return null;\r\n        }\r\n        if (!this.state.start_time || !this.state.end_time){\r\n            notify_error(\"You have to select time!\")\r\n            return null;\r\n        }\r\n        if (!this.state.section){\r\n            notify_error(\"You have to select section!\")\r\n            return null;\r\n        }\r\n        let queryString = \"\";\r\n        if (this.state.section) {\r\n            queryString = queryString + \"&section=\" + this.state.section;\r\n        }\r\n        if (this.state.start_date) {\r\n            queryString = queryString + \"&from=\" + this.state.start_date.toISOString().split(\"T\")[0];\r\n            if (this.state.start_time) {\r\n                queryString = queryString + \"T\" + this.state.start_time.hour() + \":\" + this.state.start_time.minute() + \":00\"\r\n            }\r\n        }\r\n        if (this.state.end_date) {\r\n            queryString = queryString + \"&to=\" + this.state.end_date.toISOString().split(\"T\")[0];\r\n            if(this.state.end_time){\r\n                queryString = queryString + \"T\" + this.state.end_time.hour() + \":\" + this.state.end_time.minute() + \":00\"\r\n            }\r\n        }\r\n        if (this.state.machines) {\r\n            queryString = queryString + \"&machines=\" + this.state.machines.join(\",\");\r\n        }\r\n        this.props.onFilter(queryString);\r\n        console.log(\"query string: query string\", queryString.replace(\"?&\", \"?\"));\r\n\r\n    }\r\n    onClearSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            start_date: null,\r\n            start_time: null,\r\n            end_date: null,\r\n            end_time: null,\r\n            section: null,\r\n            machines: null,\r\n            machineList: null,\r\n            shift: null,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.sections) {\r\n            return(\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <Spinner/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <h4 className=\"card-title\">Add Filter</h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-3 pr-3\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Section</label>\r\n                                        <select className=\"form-control\" onChange={this.onSectionSelection}>\r\n                                            <option value=\"100\"> -- All --</option>\r\n                                            {this.props.sections.map(item => {\r\n                                                if (item.name !== \"All\") {\r\n                                                    return <option key={item.id} value={item.id}>{item.name}</option>\r\n                                                }\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-2 pl-1\">\r\n                                    <div className=\"form-group\">\r\n                                        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                            <KeyboardDatePicker\r\n                                                margin=\"normal\"\r\n                                                id=\"date-picker-dialog\"\r\n                                                label=\"Select Date From\"\r\n                                                format=\"YYYY-MM-DD\"\r\n                                                value={this.state.start_date}\r\n                                                onChange={(date) => this.setState({start_date: date})}\r\n                                                KeyboardButtonProps={{\r\n                                                    'aria-label': 'change date',\r\n                                                }}\r\n                                            />\r\n                                        </MuiPickersUtilsProvider>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-2 pl-1\">\r\n                                    <div className=\"form-group\">\r\n                                        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                            <KeyboardTimePicker\r\n                                                margin=\"normal\"\r\n                                                id=\"time-picker\"\r\n                                                label=\"Select Time From\"\r\n                                                value={this.state.start_time}\r\n                                                onChange={(time) => this.setState({start_time: time})}\r\n                                                KeyboardButtonProps={{\r\n                                                    'aria-label': 'change time',\r\n                                                }}\r\n                                            />\r\n                                        </MuiPickersUtilsProvider>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-2 pr-1\">\r\n                                    <div className=\"form-group\">\r\n                                        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                            <KeyboardDatePicker\r\n                                                margin=\"normal\"\r\n                                                id=\"date-picker-dialog\"\r\n                                                label=\"Select Date To\"\r\n                                                format=\"YYYY-MM-DD\"\r\n                                                value={this.state.end_date}\r\n                                                onChange={(date) => this.setState({end_date: date})}\r\n                                                KeyboardButtonProps={{\r\n                                                    'aria-label': 'change date',\r\n                                                }}\r\n                                            />\r\n                                        </MuiPickersUtilsProvider>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-2 pl-1\">\r\n                                    <div className=\"form-group\">\r\n                                        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                            <KeyboardTimePicker\r\n                                                margin=\"normal\"\r\n                                                id=\"time-picker\"\r\n                                                label=\"Select Time To\"\r\n                                                value={this.state.end_time}\r\n                                                onChange={(time) => this.setState({end_time: time})}\r\n                                                KeyboardButtonProps={{\r\n                                                    'aria-label': 'change time',\r\n                                                }}\r\n                                            />\r\n                                        </MuiPickersUtilsProvider>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-3 pl-1\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Machine</label>\r\n                                        <select multiple className=\"form-control\" onChange={this.onMachineSelection}>\r\n                                            <option disabled value=\"\"> -- select a section --</option>\r\n                                            {this.state.machineList ?\r\n                                                this.state.machineList[0].machines.map(item => <option\r\n                                                    key={item.machine_no} value={item.machine_no}>{item.name}</option>)\r\n                                                : null\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4 pr-1\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-warning btn-fill pull-left mr-2\"\r\n                                        onClick={e => this.onFormSubmit(e)}\r\n                                    >\r\n                                        Apply Filter\r\n                                    </button>\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-danger btn-fill pull-left mr-2\"\r\n                                        onClick={e => this.onClearSubmit(e)}\r\n                                    >\r\n                                        Clear Date\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.fbAuth.isUserAuthenticated,\r\n        machines: state.company.machines,\r\n        sections: state.company.sections\r\n    };\r\n};\r\nexport default connect(mapStateToProps, {getMachines, getSections})(MachineStatusFilter);","E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\reducers\\machineStatusReducer.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\store\\actions\\machineStatus.js",[],"E:\\projects\\HTEC\\machine_status_management_front\\src\\pages\\Machines\\DataTable.js",[],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":2,"column":15,"nodeType":"249","messageId":"250","endLine":2,"endColumn":20},{"ruleId":"247","severity":1,"message":"251","line":2,"column":22,"nodeType":"249","messageId":"250","endLine":2,"endColumn":28},{"ruleId":"247","severity":1,"message":"252","line":7,"column":8,"nodeType":"249","messageId":"250","endLine":7,"endColumn":12},{"ruleId":"247","severity":1,"message":"253","line":8,"column":8,"nodeType":"249","messageId":"250","endLine":8,"endColumn":14},{"ruleId":"247","severity":1,"message":"254","line":9,"column":8,"nodeType":"249","messageId":"250","endLine":9,"endColumn":12},{"ruleId":"247","severity":1,"message":"255","line":10,"column":8,"nodeType":"249","messageId":"250","endLine":10,"endColumn":14},{"ruleId":"247","severity":1,"message":"256","line":11,"column":8,"nodeType":"249","messageId":"250","endLine":11,"endColumn":15},{"ruleId":"247","severity":1,"message":"257","line":12,"column":8,"nodeType":"249","messageId":"250","endLine":12,"endColumn":17},{"ruleId":"247","severity":1,"message":"258","line":13,"column":8,"nodeType":"249","messageId":"250","endLine":13,"endColumn":14},{"ruleId":"247","severity":1,"message":"252","line":5,"column":8,"nodeType":"249","messageId":"250","endLine":5,"endColumn":12},{"ruleId":"247","severity":1,"message":"259","line":1,"column":8,"nodeType":"249","messageId":"250","endLine":1,"endColumn":9},{"ruleId":"247","severity":1,"message":"259","line":1,"column":8,"nodeType":"249","messageId":"250","endLine":1,"endColumn":9},{"ruleId":"247","severity":1,"message":"260","line":4,"column":8,"nodeType":"249","messageId":"250","endLine":4,"endColumn":15},{"ruleId":"247","severity":1,"message":"261","line":7,"column":8,"nodeType":"249","messageId":"250","endLine":7,"endColumn":13},{"ruleId":"247","severity":1,"message":"262","line":3,"column":9,"nodeType":"249","messageId":"250","endLine":3,"endColumn":13},{"ruleId":"247","severity":1,"message":"260","line":5,"column":8,"nodeType":"249","messageId":"250","endLine":5,"endColumn":15},{"ruleId":"247","severity":1,"message":"263","line":7,"column":9,"nodeType":"249","messageId":"250","endLine":7,"endColumn":21},{"ruleId":"247","severity":1,"message":"261","line":8,"column":8,"nodeType":"249","messageId":"250","endLine":8,"endColumn":13},{"ruleId":"247","severity":1,"message":"264","line":4,"column":8,"nodeType":"249","messageId":"250","endLine":4,"endColumn":15},{"ruleId":"247","severity":1,"message":"260","line":1,"column":8,"nodeType":"249","messageId":"250","endLine":1,"endColumn":15},{"ruleId":"247","severity":1,"message":"262","line":3,"column":9,"nodeType":"249","messageId":"250","endLine":3,"endColumn":13},{"ruleId":"247","severity":1,"message":"265","line":7,"column":8,"nodeType":"249","messageId":"250","endLine":7,"endColumn":15},{"ruleId":"247","severity":1,"message":"262","line":3,"column":9,"nodeType":"249","messageId":"250","endLine":3,"endColumn":13},{"ruleId":"247","severity":1,"message":"266","line":3,"column":15,"nodeType":"249","messageId":"250","endLine":3,"endColumn":23},{"ruleId":"267","severity":1,"message":"268","line":124,"column":75,"nodeType":"269","messageId":"270","endLine":124,"endColumn":77},"no-native-reassign",["271"],"no-negated-in-lhs",["272"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'List' is defined but never used.","'Create' is defined but never used.","'Edit' is defined but never used.","'Delete' is defined but never used.","'Details' is defined but never used.","'LoginForm' is defined but never used.","'Logout' is defined but never used.","'_' is defined but never used.","'history' is defined but never used.","'Table' is defined but never used.","'Link' is defined but never used.","'fetchStreams' is defined but never used.","'streams' is defined but never used.","'Spinner' is defined but never used.","'Redirect' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]